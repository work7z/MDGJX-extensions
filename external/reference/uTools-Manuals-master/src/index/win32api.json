[{
    "path": "win32api/SoundSentryProc.html",
    "type": "易用特性函数",
    "name": "SoundSentryProc",
    "desc": "该函数是一个库定义的回调函数，当SOUNDSENTRY易用特性存在，并且一个基于win32的应用程序（或者在窗口内运行的应用程序）通过计算机的内置扬声器发声时，它产生一个控制的可视化消息"
}, {
    "path": "win32api/SystemParametersinfo.html",
    "type": "易用特性函数",
    "name": "SystemParametersinfo",
    "desc": "该函数查询或设置系统级参数"
}, {
    "path": "win32api/CheckDlgButton.html",
    "type": "按钮函数",
    "name": "CheckDlgButton",
    "desc": "该函数改变按钮控制的选中状态"
}, {
    "path": "win32api/CheckRadioButton.html",
    "type": "按钮函数",
    "name": "CheckRadioButton",
    "desc": "该函数给一组单选按钮中的一个指定按钮加上选中标志，并且清除组中其他按钮的选中标志"
}, {
    "path": "win32api/IsDlgButtonChecked.html",
    "type": "按钮函数",
    "name": "IsDlgButtonChecked",
    "desc": "该函数可以确定某个按钮控制是否有选中标志，或者三态按钮控制是否为灰色的、选中的、或两者都不是"
}, {
    "path": "win32api/CreateCaret.html",
    "type": "插入标记函数",
    "name": "CreateCaret",
    "desc": "函数功能；该函数为系统插入标记创建一个新的形状，并且将插入标记的属主关系指定给特定的窗口"
}, {
    "path": "win32api/DestroyCaret.html",
    "type": "插入标记函数",
    "name": "DestroyCaret",
    "desc": "函数功能:该函数清除插入标记的当前形状，从窗口中释放插入标记，并且删除屏幕上的插入标记"
}, {
    "path": "win32api/GetCaretBlinkTime.html",
    "type": "插入标记函数",
    "name": "GetCaretBlinkTime",
    "desc": "该函数返回一个公用的时间，单位为毫秒"
}, {
    "path": "win32api/GetCaretPos.html",
    "type": "插入标记函数",
    "name": "GetCaretPos",
    "desc": "该函数将插入标记的位置（按客户区坐标）信息拷贝到指定的POINT结构中"
}, {
    "path": "win32api/HideCaret.html",
    "type": "插入标记函数",
    "name": "HideCaret",
    "desc": "该函数将屏幕上的插入标记清除"
}, {
    "path": "win32api/SetCaretBlinkTime.html",
    "type": "插入标记函数",
    "name": "SetCaretBlinkTime",
    "desc": "该函数将插入标记的闪烁时间设置为一个指定的数目，该数目的单位为毫秒，闪烁时间就是转化插入标记像素所需的时间，单位为毫秒"
}, {
    "path": "win32api/SetCaretPos.html",
    "type": "插入标记函数",
    "name": "SetCaretPos",
    "desc": "该函数将插入标记移动到指定的坐标上"
}, {
    "path": "win32api/ShowCaret.html",
    "type": "插入标记函数",
    "name": "ShowCaret",
    "desc": "该函数使插入标记在屏幕的当前位置上可见"
}, {
    "path": "win32api/CCHookProc.html",
    "type": "组合框函数",
    "name": "CCHookProc",
    "desc": "该挂钩函数是一个应用程序或库定义的回调函数"
}, {
    "path": "win32api/CFHookProc.html",
    "type": "组合框函数",
    "name": "CFHookProc",
    "desc": "该挂钩函数是一个应用程序定义的或库定义的回调函数，此回调函数与ChooseFont函数一起使用"
}, {
    "path": "win32api/ChooseColor.html",
    "type": "组合框函数",
    "name": "ChooseColor",
    "desc": "该函数创建一个能使用户从中选择颜色的通用颜色对话框"
}, {
    "path": "win32api/ChooseFont.html",
    "type": "组合框函数",
    "name": "ChooseFont",
    "desc": "该函数创建一个使用户选择逻辑字体属性的对话框，这些属性包括字体名称、字体风格（如粗体、斜体或正常体）、字号、效果（如强调线，下划线或字体颜色）和手写体（或字符集）"
}, {
    "path": "win32api/CommDlgExtendedEorror.html",
    "type": "组合框函数",
    "name": "CommDlgExtendedEorror",
    "desc": "该函数返回一个对话框错误代码，此代码显示出在执行下列对话框函数时要出现的最近的错误：ChooseColor，GetOpenFileName，ChooseFont，GetSaveFileName，FindText，PrintDlg，ReplaceText，PageSetpDlg"
}, {
    "path": "win32api/DlgDirListComboBox.html",
    "type": "组合框函数",
    "name": "DlgDirListComboBox",
    "desc": "该函数用一个目录列表来填充指定的组合框"
}, {
    "path": "win32api/DlgDirSelectEx.html",
    "type": "组合框函数",
    "name": "DlgDirSelectEx",
    "desc": "该函数从单选列表框中检取当前选择，列表框已经由DlgDirlist函数填充，并且选择内容为一个驱动器字母，文件名或目录名"
}, {
    "path": "win32api/DlgDirSelectComboBoxEx.html",
    "type": "组合框函数",
    "name": "DlgDirSelectComboBoxEx",
    "desc": "该函数从由DlgDirlistcomboBox函数填充的组合框中检取当前选择"
}, {
    "path": "win32api/FindText.html",
    "type": "组合框函数",
    "name": "FindText",
    "desc": "该函数创建一个系统定义的无模式Find对话框，为使用户指定一个串来查找文本内的文字"
}, {
    "path": "win32api/FRHookProc.html",
    "type": "组合框函数",
    "name": "FRHookProc",
    "desc": "该函数是由应用程序定义或库定义的回调函数"
}, {
    "path": "win32api/GetFileTitle.html",
    "type": "组合框函数",
    "name": "GetFileTitle",
    "desc": "该函数返回由IpszFile参数标识的文件名"
}, {
    "path": "win32api/GetSaveFileName.html",
    "type": "组合框函数",
    "name": "GetOpenFileName",
    "desc": "该函数创建一个Save公共对话框，以便用户指定驱动器、目录和文件名"
}, {
    "path": "win32api/GetSaveFileName.html",
    "type": "组合框函数",
    "name": "GetSaveFileName",
    "desc": "该函数创建一个Save公共对话框，以便用户指定驱动器、目录和文件名"
}, {
    "path": "win32api/OFNGookProc.html",
    "type": "组合框函数",
    "name": "OFNGookProc",
    "desc": "该挂钩函数是应用程序定义的或库定义的回调函数，此回调函数与Explorer_Style和Save As公共对话框一起使用"
}, {
    "path": "win32api/OFNHookProcOldStyle.html",
    "type": "组合框函数",
    "name": "OFNHookProcOldStyle",
    "desc": "该挂钩函数是应用程序定义或库定义的回调函数"
}, {
    "path": "win32api/PagePaintHook.html",
    "type": "组合框函数",
    "name": "PagePaintHook",
    "desc": "该挂钩函数是一个由应用程序或库定义的回调函数，该回调函数与PageSetup函数一起使用"
}, {
    "path": "win32api/PageSetupDlg.html",
    "type": "组合框函数",
    "name": "PageSetupDlg",
    "desc": "该函数创建一个PageSetup对话框，此对话框能使用户指定打印页的属性"
}, {
    "path": "win32api/pageSetupHook.html",
    "type": "组合框函数",
    "name": "pageSetupHook",
    "desc": "该挂钩函数为由应用程序或库定义的回调函数"
}, {
    "path": "win32api/PrintDlg.html",
    "type": "组合框函数",
    "name": "PrintDlg.html",
    "desc": "该函数显示打印对话框或打印设置对话框"
}, {
    "path": "win32api/PrintdlgEx.html",
    "type": "组合框函数",
    "name": "PrintdlgEx",
    "desc": "该函数显示一个Print属性页"
}, {
    "path": "win32api/PrintHookProc.html",
    "type": "组合框函数",
    "name": "PrintHookProc",
    "desc": "该挂钩函数是一个由应用程序或库定义的回调函数，此回调函数与PrintDlg函数一起使用"
}, {
    "path": "win32api/ReplaceText.html",
    "type": "组合框函数",
    "name": "ReplaceText",
    "desc": "函数功能"
}, {
    "path": "win32api/SetupHookProc.html",
    "type": "组合框函数",
    "name": "SetupHookProc",
    "desc": "该挂钩函数是一个由应用程序或库定义的回调函数，该回调函数与PrintDlg函数一起使用"
}, {
    "path": "win32api/ClipCursor.html",
    "type": "标函数",
    "name": "ClipCursor",
    "desc": "函数功能；该函数把光标限制在屏幕上的一个矩形区域内，如果调用SetCursor或用鼠标设置的一个随后的光标位置在该矩形区域的外面，则系统自动调整该位置以保持光标在矩形区域之内"
}, {
    "path": "win32api/CopyCursor.html",
    "type": "标函数",
    "name": "CopyCursor",
    "desc": "该函数复制一光标"
}, {
    "path": "win32api/CreateCursor.html",
    "type": "标函数",
    "name": "CreateCursor",
    "desc": "该函数创建一个指定大小、位模式和热点的光标"
}, {
    "path": "win32api/DestroyCursor.html",
    "type": "标函数",
    "name": "DestroyCursor",
    "desc": "该函数销毁一个光标并释放它占用的任何内存，不要使用该函数去消毁一个共享光标"
}, {
    "path": "win32api/GetClipCursor.html",
    "type": "标函数",
    "name": "GetClipCursor",
    "desc": "该函数检取一个矩形区域的屏幕坐标，光标被限制在该矩形区域之内"
}, {
    "path": "win32api/GetCursor.html",
    "type": "标函数",
    "name": "GetCursor",
    "desc": "该函数检取当前光标的句柄"
}, {
    "path": "win32api/GetCursorpos.html",
    "type": "标函数",
    "name": "GetCursorpos",
    "desc": "该函数检取光标的位置，以屏幕坐标表示"
}, {
    "path": "win32api/LoadCursorFromFile.html",
    "type": "标函数",
    "name": "LoadCursorFromFile",
    "desc": "该函数根据一个文件中所含的数据创建光标"
}, {
    "path": "win32api/SetCursor.html",
    "type": "标函数",
    "name": "SetCursor",
    "desc": "该函数确定光标的形状"
}, {
    "path": "win32api/SetCursorPos.html",
    "type": "标函数",
    "name": "SetCursorPos",
    "desc": "该函数把光标移到屏幕的指定位置"
}, {
    "path": "win32api/SetSystemCursor.html",
    "type": "标函数",
    "name": "SetSystemCursor",
    "desc": "该函数使一个应用程序定制系统光标"
}, {
    "path": "win32api/ShowCursor.html",
    "type": "标函数",
    "name": "ShowCursor",
    "desc": "该函数显示或隐藏光标"
}, {
    "path": "win32api/LoadCursor.html",
    "type": "标函数",
    "name": "LoadCursor",
    "desc": "该函数从一个与应用事例相关的可执行文件（EXE文件）中载入指定的光标资源"
}, {
    "path": "win32api/CreateDialog.html",
    "type": "对话框函数",
    "name": "CreateDialog",
    "desc": "CreateDialog宏从一个对话框模板资源创建一个无模式的对话框，CreateDiaog宏使用CreateDialogParam函数"
}, {
    "path": "win32api/CreateDialoglndirect.html",
    "type": "对话框函数",
    "name": "CreateDialoglndirect",
    "desc": "该宏在内存中从对话框模板上创建一个无模式对话框"
}, {
    "path": "win32api/CreateDialoglndirectParam.html",
    "type": "对话框函数",
    "name": "CreateDialoglndirectParam",
    "desc": "该函数从内存中的对话框模板上创建一个无模式对话框，在显示对话框之前，函数把应用程序定义的值作为WM＿INITDIALOG消息的IParam参数传送到对话框过程"
}, {
    "path": "win32api/CreateDialogParam.html",
    "type": "对话框函数",
    "name": "CreateDialogParam",
    "desc": "该函数根据对话框模板资源创建一个无模式的对话框"
}, {
    "path": "win32api/DefDlgProc.html",
    "type": "对话框函数",
    "name": "DefDlgProc",
    "desc": "该函数为属于应用程序定义的对话框类的窗口过程提供缺省的消息处理"
}, {
    "path": "win32api/DialogBox.html",
    "type": "对话框函数",
    "name": "DialogBox",
    "desc": "该宏根据对话框模板资源创建一个模态的对话框"
}, {
    "path": "win32api/DialogBoxlndirect.html",
    "type": "对话框函数",
    "name": "DialogBoxlndirect",
    "desc": "该宏根据内存中的对话框模板资源创建一个模态的对话框"
}, {
    "path": "win32api/DialogBoxlndirectParam.html",
    "type": "对话框函数",
    "name": "DialogBoxlndirectParam",
    "desc": "函数功能；该函数根据内存中对话框模板创建一个模态的对话框"
}, {
    "path": "win32api/DialogBoxParam.html",
    "type": "对话框函数",
    "name": "DialogBoxParam",
    "desc": "该函数根据对话框模板资源创建一个模态的对话框"
}, {
    "path": "win32api/DialogProc.html",
    "type": "对话框函数",
    "name": "DialogProc",
    "desc": "该函数为一个应用程序定义可与DialogBOX函数一起使用的回调函数"
}, {
    "path": "win32api/EndDialog.html",
    "type": "对话框函数",
    "name": "EndDialog",
    "desc": "该函数清除一个模态对话框,并使系统中止对对话框的任何处理"
}, {
    "path": "win32api/GetDialogBaseUnits.html",
    "type": "对话框函数",
    "name": "GetDialogBaseUnits",
    "desc": "该函数返回系统的对话基本单位，该基本单位为系统字体字符的平均宽度和高度"
}, {
    "path": "win32api/GetDigCtrllD.html",
    "type": "对话框函数",
    "name": "GetDigCtrllD",
    "desc": "该函数返回指定控制的标识符"
}, {
    "path": "win32api/GetDigltem.html",
    "type": "对话框函数",
    "name": "GetDigltem",
    "desc": "该函数检索指定的对话框中的控制句柄"
}, {
    "path": "win32api/GetDlgltemlnt.html",
    "type": "对话框函数",
    "name": "GetDlgltemlnt",
    "desc": "该函数把对话框中指定控制的文本转变为一个整型值"
}, {
    "path": "win32api/GetDlgltemText.html",
    "type": "对话框函数",
    "name": "GetDlgltemText",
    "desc": "该函数获取对话框中与控制有关的文本或标题"
}, {
    "path": "win32api/GetNextDlgGroupltem.html",
    "type": "对话框函数",
    "name": "GetNextDlgGroupltem",
    "desc": "该函数检索控制组的第一个控制的句柄，该控制组跟随对话框中指定的控制"
}, {
    "path": "win32api/GetNexTDlgTabltem.html",
    "type": "对话框函数",
    "name": "GetNexTDlgTabltem",
    "desc": "该函数检索有WS_GROUP类型的第一个控制的句柄，该WS_GROUP类型控制跟随指定的控制"
}, {
    "path": "win32api/IsDialogMessage.html",
    "type": "对话框函数",
    "name": "IsDialogMessage",
    "desc": "该函数决定一个消息是否指定给指定的对话框，如果是，则处理消息"
}, {
    "path": "win32api/MapDialogRect.html",
    "type": "对话框函数",
    "name": "MapDialogRect",
    "desc": "该函数把指定的对话框单位映射成屏幕单位（像素）"
}, {
    "path": "win32api/MessageBox.html",
    "type": "对话框函数",
    "name": "MessageBox",
    "desc": "该函数创建、显示、和操作一个消息框"
}, {
    "path": "win32api/MessageBoxEx.html",
    "type": "对话框函数",
    "name": "MessageBoxEx",
    "desc": "该函数创建、显示、和操作一个消息框"
}, {
    "path": "win32api/SendDlgltemMessage.html",
    "type": "对话框函数",
    "name": "SendDlgltemMessage",
    "desc": "该函数把一个消息发送给指定的对话框中的控制"
}, {
    "path": "win32api/SetDlgltemlnt.html",
    "type": "对话框函数",
    "name": "SetDlgltemlnt",
    "desc": "该函数把对话框中控制文本设置为用一个指定整型值的字符串表示"
}, {
    "path": "win32api/SetDlgltemText.html",
    "type": "对话框函数",
    "name": "SetDlgltemText",
    "desc": "该函数设置对话框中控制的文本和标题"
}, {
    "path": "win32api/MessageBoxlndirect.html",
    "type": "对话框函数",
    "name": "MessageBoxlndirect",
    "desc": "该函数创建、显示和操作一个消息框"
}, {
    "path": "win32api/EditWordBreakproc.html",
    "type": "编辑控制函数",
    "name": "EditWordBreakproc",
    "desc": "该函数是由应用程序定义的回调函数，该函数与EM_SETWORDBREAKPROC信号一起使用，一个多行编辑控制每当必须中断文本行时都调用EditwordBreakProc函数"
}, {
    "path": "win32api/Copylcon.html",
    "type": "图标函数",
    "name": "Copylcon",
    "desc": "该函数从另外的模块向当前模块复制指定的图标"
}, {
    "path": "win32api/Createlcon.html",
    "type": "图标函数",
    "name": "Createlcon",
    "desc": "该函数按指定的大小、彩色、位创建图标"
}, {
    "path": "win32api/CreatelconFromResource.html",
    "type": "图标函数",
    "name": "CreatelconFromResource",
    "desc": "该函数通过描述图标的资源位创建图标或光标"
}, {
    "path": "win32api/CreatelconFromResourceEx.html",
    "type": "图标函数",
    "name": "CreatelconFromResourceEx",
    "desc": "该函数通过描述图标的资源位创建图标或光标"
}, {
    "path": "win32api/Destroylcon.html",
    "type": "图标函数",
    "name": "Destroylcon",
    "desc": "该函数清除图标和释放任何被图标占用的存储空间"
}, {
    "path": "win32api/Create_cpm_mdorect_ZIWe.html",
    "type": "图标函数",
    "name": "Create_cpm_mdorect_ZIWe",
    "desc": "该函数从ICONINFO结构创建目标或光标"
}, {
    "path": "win32api/Drawlcon.html",
    "type": "图标函数",
    "name": "Drawlcon",
    "desc": "该函数在限定的设备上下文窗口的客户区域绘制图标"
}, {
    "path": "win32api/DrawlconEx.html",
    "type": "图标函数",
    "name": "DrawlconEx",
    "desc": "该函数在限定的设备上下文窗口的客户区域绘制图标，执行限定的光栅操作，并按特定要求伸长或压缩图标或光标"
}, {
    "path": "win32api/ExtractAssociatedlcon.html",
    "type": "图标函数",
    "name": "ExtractAssociatedlcon",
    "desc": "函数功能；该函数返回存在于文件中的索引图标或存在于相关联可执行文件中的图标句柄"
}, {
    "path": "win32api/Extractlcon.html",
    "type": "图标函数",
    "name": "Extractlcon",
    "desc": "该函数从限定的可执行文件，动态链接库（DLL）；或者图标文件中恢复图标句柄．为恢复大或小的图标句柄数组，使用ExtractlconEx函数"
}, {
    "path": "win32api/ExtractlconEx.html",
    "type": "图标函数",
    "name": "ExtractlconEx",
    "desc": "该函数从限定的可执行文件；动态链接库（DLL），或者图标文件中生成图标句柄数组"
}, {
    "path": "win32api/Getlconlnfo.html",
    "type": "图标函数",
    "name": "Getlconlnfo",
    "desc": "该函数恢复限定的图标或光标的信息"
}, {
    "path": "win32api/LookuplconldFromDirectory.html",
    "type": "图标函数",
    "name": "LookuplconldFromDirectory",
    "desc": "该函数通过图标或光标数据搜索最适合当前显示设备的图标或光标"
}, {
    "path": "win32api/LookuplconldFrom.html",
    "type": "图标函数",
    "name": "LookuplconldFrom",
    "desc": "该函数通过图标或光标数据搜索最适合当前显示设备的图标或光标"
}, {
    "path": "win32api/Loadlcon.html",
    "type": "图标函数",
    "name": "Loadlcon",
    "desc": "该函数从与应用事例关联的可执行文件（EXE）中装载限定的图标资源"
}, {
    "path": "win32api/CopyAcceleratorTable.html",
    "type": "键盘加速器函数",
    "name": "CopyAcceleratorTable",
    "desc": "拷贝加速键表"
}, {
    "path": "win32api/CreateAcceleratorTable.html",
    "type": "键盘加速器函数",
    "name": "CreateAcceleratorTable",
    "desc": "创建加速键表"
}, {
    "path": "win32api/DestroyAcceleratorTable.html",
    "type": "键盘加速器函数",
    "name": "DestroyAcceleratorTable",
    "desc": "撤消加速键表"
}, {
    "path": "win32api/LoadAccelerators.html",
    "type": "键盘加速器函数",
    "name": "LoadAccelerators",
    "desc": "调入加速键表"
}, {
    "path": "win32api/TranslateAccelerator.html",
    "type": "键盘加速器函数",
    "name": "TranslateAccelerator",
    "desc": "翻译加速键表"
}, {
    "path": "win32api/ActivateKeyboadLayout.html",
    "type": "键盘输入函数",
    "name": "ActivateKeyboadLayout",
    "desc": "激活键盘布局"
}, {
    "path": "win32api/EnableWindow.html",
    "type": "键盘输入函数",
    "name": "EnableWindow",
    "desc": "该函数允许／禁止指定的窗口或控制接受鼠标和键盘的输入，当输入被禁止时，窗口不响应鼠标和按键的输入，输入允许时，窗口接受所有的输入"
}, {
    "path": "win32api/GetActiveWindows.html",
    "type": "键盘输入函数",
    "name": "GetActiveWindows",
    "desc": "该函数可以获得与调用线程的消息队列相关的活动窗口的窗口句柄"
}, {
    "path": "win32api/GetAsyncKeyState.html",
    "type": "键盘输入函数",
    "name": "GetAsyncKeyState",
    "desc": "该函数用于确定函数被调用时，相应按键是处于按下状态，还是处于弹起状态；并且按下此键前否调用过GetAsyncKeystate函数"
}, {
    "path": "win32api/GetFocus.html",
    "type": "键盘输入函数",
    "name": "GetFocus",
    "desc": "该函数获取与调用线程消息队列相关的窗口的句柄，该窗口拥有输入焦点"
}, {
    "path": "win32api/GetKBCodePage.html",
    "type": "键盘输入函数",
    "name": "GetKBCodePage",
    "desc": "该函数已过时"
}, {
    "path": "win32api/GetKeyboardLayout.html",
    "type": "键盘输入函数",
    "name": "GetKeyboardLayout",
    "desc": "该函数可以获得指定线程的活动键盘布局"
}, {
    "path": "win32api/GetKeyboardLayoutList.html",
    "type": "键盘输入函数",
    "name": "GetKeyboardLayoutList",
    "desc": "该函数可以获得与系统中输入点的当前集相对应的键盘布局句柄"
}, {
    "path": "win32api/GetKeyboardLayoutName.html",
    "type": "键盘输入函数",
    "name": "GetKeyboardLayoutName",
    "desc": "该函数可以获得活动键盘布局的名字"
}, {
    "path": "win32api/GetKeyboardState.html",
    "type": "键盘输入函数",
    "name": "GetKeyboardState",
    "desc": "该函数将256个虚拟键的状态拷贝到指定的缓冲区中"
}, {
    "path": "win32api/GetKeyNameText.html",
    "type": "键盘输入函数",
    "name": "GetKeyNameText",
    "desc": "该函数检取表示键名的字符串"
}, {
    "path": "win32api/GetKeyState.html",
    "type": "键盘输入函数",
    "name": "GetKeyState",
    "desc": "该函数检取指定虚拟键的状态"
}, {
    "path": "win32api/IsWindowEnabled.html",
    "type": "键盘输入函数",
    "name": "IsWindowEnabled",
    "desc": "该函数用于判断指定的窗口是否允许接受键盘或鼠标输入"
}, {
    "path": "win32api/keybd_event.html",
    "type": "键盘输入函数",
    "name": "keybd_event",
    "desc": "该函数合成一次击键事件"
}, {
    "path": "win32api/LoadKeyboardLayout.html",
    "type": "键盘输入函数",
    "name": "LoadKeyboardLayout.html",
    "desc": "该函数给系统中装入一种新的键盘布局，可以同时装入几种不同的键盘布局，任一时刻仅有一个进程是活动的，装入多个键盘布局使得在多种布局间快速切换"
}, {
    "path": "win32api/MapVirtualKey.html",
    "type": "键盘输入函数",
    "name": "MapVirtualKey",
    "desc": "该函数将一虚拟键码翻译（映射）成一扫描码或一字符值，或者将一扫描码翻译成一虚拟键码"
}, {
    "path": "win32api/MapVlrtualKeyEx.html",
    "type": "键盘输入函数",
    "name": "MapVlrtualKeyEx",
    "desc": "该函数将虚拟键码翻译为扫描码或字符值，或者将扫描码翻译为虚拟键码"
}, {
    "path": "win32api/OemKeyScan.html",
    "type": "键盘输入函数",
    "name": "OemKeyScan",
    "desc": "该函数将0-0x0FF的OEM ASCII代码映射为OEM扫描码及其转换状态"
}, {
    "path": "win32api/RegisterHotKey.html",
    "type": "键盘输入函数",
    "name": "RegisterHotKey",
    "desc": "该函数定义一个系统范围的热键"
}, {
    "path": "win32api/SetActiveWindow.html",
    "type": "键盘输入函数",
    "name": "SetActiveWindow",
    "desc": "该函数激活一个窗口"
}, {
    "path": "win32api/SetFocus.html",
    "type": "键盘输入函数",
    "name": "SetFocus",
    "desc": "该函数对指定的窗口设置键盘焦点"
}, {
    "path": "win32api/SetKeyboardState.html",
    "type": "键盘输入函数",
    "name": "SetKeyboardState",
    "desc": "该函数拷贝一个存放键盘键状态的256字节的数组到调用线程的键盘输入状态表中"
}, {
    "path": "win32api/ToAscii.html",
    "type": "键盘输入函数",
    "name": "ToAscii",
    "desc": "该函数将指定的虚拟键码和键盘状态翻译为相应的字符或字符串"
}, {
    "path": "win32api/ToAsciiCx.html",
    "type": "键盘输入函数",
    "name": "ToAsciiCx",
    "desc": "该函数将指定的虚拟键码和键盘状态翻译为相应的字符或字符串"
}, {
    "path": "win32api/ToUnicode.html",
    "type": "键盘输入函数",
    "name": "ToUnicode",
    "desc": "该函数将给定的虚拟键码和键盘状态翻译成相应的字符或字符串"
}, {
    "path": "win32api/ToUnicodeEx.html",
    "type": "键盘输入函数",
    "name": "ToUnicodeEx",
    "desc": "该函数将给定的虚拟键码和键盘状态翻译成相应的字符或字符串"
}, {
    "path": "win32api/UnloadKeyboardL.html",
    "type": "键盘输入函数",
    "name": "UnloadKeyboardL",
    "desc": "该函数移去一个键盘布局"
}, {
    "path": "win32api/UnreglsterHotKey.html",
    "type": "键盘输入函数",
    "name": "UnreglsterHotKey",
    "desc": "该函数释放调用线程先前登记的热键"
}, {
    "path": "win32api/VkKeyScan.html",
    "type": "键盘输入函数",
    "name": "VkKeyScan",
    "desc": "该函数将一个字符翻译成相应的虚拟键码和对于当前键盘的转换状态"
}, {
    "path": "win32api/vkKeyScanEx.html",
    "type": "键盘输入函数",
    "name": "vkKeyScanEx",
    "desc": "该函数将一个字符翻译成相应的虚拟键码和对于当前键盘的上挡状态"
}, {
    "path": "win32api/DlgDirList.html",
    "type": "列表框函数",
    "name": "DlgDirList",
    "desc": "该函数用与指定的文件名匹配的所有文件的名字填充列表框"
}, {
    "path": "win32api/DlgDirSelectEx(2).html",
    "type": "列表框函数",
    "name": "DlgDirSelectEx(2)",
    "desc": "该函数从单选列表框中检取当前选择"
}, {
    "path": "win32api/CheckMenuRadlol.html",
    "type": "菜单函数",
    "name": "CheckMenuRadlol",
    "desc": "该函数校校一个指定的菜单项并使其成为一个圆按钮项"
}, {
    "path": "win32api/CreateMenu.html",
    "type": "菜单函数",
    "name": "CreateMenu",
    "desc": "该函数创建一个菜单"
}, {
    "path": "win32api/CreatePopupMenu.html",
    "type": "菜单函数",
    "name": "CreatePopupMenu",
    "desc": "该函数创建一个下拉式菜单、子菜单或快捷菜单"
}, {
    "path": "win32api/DeleteMenu.html",
    "type": "菜单函数",
    "name": "DeleteMenu",
    "desc": "该函数从指定菜单里删除一个菜单项"
}, {
    "path": "win32api/DestroyMenu.html",
    "type": "菜单函数",
    "name": "DestroyMenu",
    "desc": "函数动能：该函数销毁指定的菜单，并释放此菜单占用的存储器"
}, {
    "path": "win32api/DrawMenuBar.html",
    "type": "菜单函数",
    "name": "DrawMenuBar",
    "desc": "该函数重画指定菜单的菜单条"
}, {
    "path": "win32api/EnableMenultem.html",
    "type": "菜单函数",
    "name": "EnableMenultem",
    "desc": "该函数使指定的菜单项有效、无效或变灰"
}, {
    "path": "win32api/GetMenu.html",
    "type": "菜单函数",
    "name": "GetMenu",
    "desc": "该函数取得分配给指定窗口的菜单的句柄"
}, {
    "path": "win32api/GetMenuDefaultltem.html",
    "type": "菜单函数",
    "name": "GetMenuDefaultltem",
    "desc": "该函数确定指定菜单上的缺省项"
}, {
    "path": "win32api/GetMenultemlD.html",
    "type": "菜单函数",
    "name": "GetMenultemlD",
    "desc": "该函数确定指定菜单里的菜单项个数"
}, {
    "path": "win32api/GetMenultemlnfo.html",
    "type": "菜单函数",
    "name": "GetMenultemlnfo",
    "desc": "该函数取得一个菜单项的信息"
}, {
    "path": "win32api/GetMenultemRect.html",
    "type": "菜单函数",
    "name": "GetMenultemRect",
    "desc": "该函数取得指定菜单项的边界矩形"
}, {
    "path": "win32api/getSubMenu.html",
    "type": "菜单函数",
    "name": "getSubMenu",
    "desc": "该函数取得被指定菜单激活的下拉式菜单或子菜单的句柄"
}, {
    "path": "win32api/GetSystemMenu.html",
    "type": "菜单函数",
    "name": "GetSystemMenu",
    "desc": "该函数允许应用程序为复制或修改而访问窗口菜单（系统菜单或控制菜单）"
}, {
    "path": "win32api/HlllteMenultem.html",
    "type": "菜单函数",
    "name": "HlllteMenultem",
    "desc": "该函数对菜单条中的菜单项加亮或清除亮度"
}, {
    "path": "win32api/InsertMenultem.html",
    "type": "菜单函数",
    "name": "InsertMenultem",
    "desc": "函数功能:该函数在菜单的指定位置插入一个新菜单项"
}, {
    "path": "win32api/IsMenu.html",
    "type": "菜单函数",
    "name": "IsMenu",
    "desc": "该函数确定一个句柄是否为菜单句柄"
}, {
    "path": "win32api/LoadMenu.html",
    "type": "菜单函数",
    "name": "LoadMenu",
    "desc": "该函数从与应用事例相联系的可执行文件（．EXE）中加载指定的菜单资源"
}, {
    "path": "win32api/LoadMenulndirect.html",
    "type": "菜单函数",
    "name": "LoadMenulndirect",
    "desc": "该函数加载指定的菜单模板到内存"
}, {
    "path": "win32api/MenultemFromPo.html",
    "type": "菜单函数",
    "name": "MenultemFromPo",
    "desc": "该函数确定指定位置的菜单项（如果存在）"
}, {
    "path": "win32api/RemoveMenu.html",
    "type": "菜单函数",
    "name": "RemoveMenu",
    "desc": "该函数从指定菜单删除一个菜单项或分离一个子菜单"
}, {
    "path": "win32api/SetMenu.html",
    "type": "菜单函数",
    "name": "SetMenu",
    "desc": "该函数分配一个新菜单到指定窗口"
}, {
    "path": "win32api/SetMenuDefaultltem.html",
    "type": "菜单函数",
    "name": "SetMenuDefaultltem",
    "desc": "该函数给指定的菜单设置缺省菜单项"
}, {
    "path": "win32api/SetMenultemBitm.html",
    "type": "菜单函数",
    "name": "SetMenultemBitm",
    "desc": "该函数将指定的位图与一个菜单项相联系"
}, {
    "path": "win32api/SetMenultemlnfo.html",
    "type": "菜单函数",
    "name": "SetMenultemlnfo",
    "desc": "该函数改动一个菜单项的信息"
}, {
    "path": "win32api/TrackPopupMenu.html",
    "type": "菜单函数",
    "name": "TrackPopupMenu",
    "desc": "该函数在指定位置显示快捷菜单，并跟踪菜单项的选择"
}, {
    "path": "win32api/TrackPopupMenuEx.html",
    "type": "菜单函数",
    "name": "TrackPopupMenuEx",
    "desc": "该函数在指定位置显示快捷菜单，并跟踪菜单项的选择"
}, {
    "path": "win32api/AppendMenu.html",
    "type": "菜单函数",
    "name": "AppendMenu",
    "desc": "该函数在指定的菜单条、下拉式菜单、子菜单或快捷菜单的末尾追加一个新菜单项"
}, {
    "path": "win32api/CheckMenultem.html",
    "type": "菜单函数",
    "name": "CheckMenultem",
    "desc": "该函数设置指定菜单项的校核标记属性为选取或不选取"
}, {
    "path": "win32api/GetMenuCheckMarkDimensions.html",
    "type": "菜单函数",
    "name": "GetMenuCheckMarkDimensions",
    "desc": "返回缺省选取标记位图的尺寸"
}, {
    "path": "win32api/GetMenuState.html",
    "type": "菜单函数",
    "name": "GetMenuState",
    "desc": "该函数取得与指定菜单项相联系的菜单标志"
}, {
    "path": "win32api/GetMenuString.html",
    "type": "菜单函数",
    "name": "GetMenuString",
    "desc": "该函数将指定菜单项的正文字符串拷贝到指定缓冲区"
}, {
    "path": "win32api/InsertMenu.html",
    "type": "菜单函数",
    "name": "InsertMenu",
    "desc": "该函数插入一个新菜单项到菜单里，并使菜单里其他项下移"
}, {
    "path": "win32api/ModifyMenu.html",
    "type": "菜单函数",
    "name": "ModifyMenu",
    "desc": "该参数修改已存在的菜单项，并指定菜单项的内容、外观和性能"
}, {
    "path": "win32api/1/BroadcastSystemMessage.html",
    "type": "消息和消息总队列函数",
    "name": "BroadcastSystemMessage",
    "desc": "该函数发送消息给指定的接受者"
}, {
    "path": "win32api/1/DispatchMessage.html",
    "type": "消息和消息总队列函数",
    "name": "DispatchMessage",
    "desc": "该函数调度一个消息给窗口程序"
}, {
    "path": "win32api/1/GetlnputState.html",
    "type": "消息和消息总队列函数",
    "name": "GetlnputState",
    "desc": "该函数确定在调用线程的消息队列里，是否有鼠标键或键盘消息"
}, {
    "path": "win32api/1/GetMessage.html",
    "type": "消息和消息总队列函数",
    "name": "GetMessage",
    "desc": "该函数从调用线程的消息队列里取得一个消息并将其放于指定的结构"
}, {
    "path": "win32api/1/GetMessageExtralnfo.html",
    "type": "消息和消息总队列函数",
    "name": "GetMessageExtralnfo",
    "desc": "该函数为当前线程取得附加消息信息"
}, {
    "path": "win32api/1/GetMessagePos.html",
    "type": "消息和消息总队列函数",
    "name": "GetMessagePos",
    "desc": "该函数返回表示屏幕坐标下光标位置的长整数值"
}, {
    "path": "win32api/1/GetMessageTime.html",
    "type": "消息和消息总队列函数",
    "name": "GetMessageTime",
    "desc": "该函数返回由GetMessage从当前线程队列里取得上一消息的消息时间"
}, {
    "path": "win32api/1/GetQueueStatus.html",
    "type": "消息和消息总队列函数",
    "name": "GetQueueStatus",
    "desc": "该函数返回表示调用线程消息队列里的消息的类型的标志"
}, {
    "path": "win32api/1/InSendMessage.html",
    "type": "消息和消息总队列函数",
    "name": "InSendMessage",
    "desc": "该函数决定当前窗口程序是否处理另一个线程调用SendMesssge（在相同进程或不同进程）发送来的消息"
}, {
    "path": "win32api/1/InSendMessageEx.html",
    "type": "消息和消息总队列函数",
    "name": "InSendMessageEx",
    "desc": "函数决定当前窗口程序是否处理另一个线程调用SendMessage（在相同进程或不同进程）发送来的消息"
}, {
    "path": "win32api/1/PeekMessage.html",
    "type": "消息和消息总队列函数",
    "name": "PeekMessage",
    "desc": "该函数为一个消息检查线程消息队列，并将该消息（如果存在）放于指定的结构"
}, {
    "path": "win32api/1/PostMessage.html",
    "type": "消息和消息总队列函数",
    "name": "PostMessage",
    "desc": "该函数将一个消息放入（寄送）到与指定窗口创建的线程相联系消息队列里，不等待线程处理消息就返回"
}, {
    "path": "win32api/1/PostQuitMessage.html",
    "type": "消息和消息总队列函数",
    "name": "PostQuitMessage",
    "desc": "该函数向系统表明有个线程有终止请求"
}, {
    "path": "win32api/1/PostThreadMessage.html",
    "type": "消息和消息总队列函数",
    "name": "PostThreadMessage",
    "desc": "该函数将一个消息放入（寄送）到指定线程的消息队列里，不等待线程处理消息就返回"
}, {
    "path": "win32api/1/RegisterWindowsMessage.html",
    "type": "消息和消息总队列函数",
    "name": "RegisterWindowsMessage",
    "desc": "该函数定义一个新的窗口消息，该消息确保在系统中是唯一的"
}, {
    "path": "win32api/1/ReplyMessage.html",
    "type": "消息和消息总队列函数",
    "name": "ReplyMessage",
    "desc": "该函数用于应答由函数SendMessage发送的消息，不返回控制给调用SendMessage的函数"
}, {
    "path": "win32api/1/SendAsyncProc.html",
    "type": "消息和消息总队列函数",
    "name": "SendAsyncProc",
    "desc": "该函数是应用程序定义的回调函数，和SendMessageCallback一起使用"
}, {
    "path": "win32api/1/SendMessage.html",
    "type": "消息和消息总队列函数",
    "name": "SendMessage",
    "desc": "该函数将指定的消息发送到一个或多个窗口"
}, {
    "path": "win32api/1/SendMessageCallback.html",
    "type": "消息和消息总队列函数",
    "name": "SendMessageCallback",
    "desc": "该函数将指定的消息发送到一个或多个窗口"
}, {
    "path": "win32api/1/SendMessageTImeout.html",
    "type": "消息和消息总队列函数",
    "name": "SendMessageTImeout",
    "desc": "该函数将指定的消息发送到一个或多个窗口"
}, {
    "path": "win32api/1/SendNotifyMessage.html",
    "type": "消息和消息总队列函数",
    "name": "SendNotifyMessage",
    "desc": "该函数将指定的消息发送到一个窗口"
}, {
    "path": "win32api/1/SendMessageExtralnfo.html",
    "type": "消息和消息总队列函数",
    "name": "SendMessageExtralnfo",
    "desc": "该函数为当前线程设置附加消息信息"
}, {
    "path": "win32api/1/TranslateMessage.html",
    "type": "消息和消息总队列函数",
    "name": "TranslateMessage",
    "desc": "该函数将虚拟键消息转换为字符消息"
}, {
    "path": "win32api/1/WaltMessage.html",
    "type": "消息和消息总队列函数",
    "name": "WaltMessage",
    "desc": "该函数产生对其他线程的控制，如果一个线程没有其他消息在其消息队列里"
}, {
    "path": "win32api/1/PostAppMessage.html",
    "type": "消息和消息总队列函数",
    "name": "PostAppMessage",
    "desc": "该函数已过时"
}, {
    "path": "win32api/1/SetMessageQueue.html",
    "type": "消息和消息总队列函数",
    "name": "SetMessageQueue",
    "desc": "该函数已过时"
}, {
    "path": "win32api/1/DragDetect.html",
    "type": "鼠标输入函数",
    "name": "DragDetect",
    "desc": "该函数捕获并跟踪鼠标的移动直到用户松开左键、按下Esc"
}, {
    "path": "win32api/1/GetCapture.html",
    "type": "鼠标输入函数",
    "name": "GetCapture",
    "desc": "该函数取得捕获了鼠标的窗口（如果存在）的句柄"
}, {
    "path": "win32api/1/GetDoubleCllckTime.html",
    "type": "鼠标输入函数",
    "name": "GetDoubleCllckTime",
    "desc": "该函数取得鼠标的当前双击时间"
}, {
    "path": "win32api/1/GetMouseMovePoints.html",
    "type": "鼠标输入函数",
    "name": "GetMouseMovePoints",
    "desc": "该函数取得鼠标或画笔"
}, {
    "path": "win32api/1/mouse_event.html",
    "type": "鼠标输入函数",
    "name": "mouse_event",
    "desc": "该函数综合鼠标击键和鼠标动作"
}, {
    "path": "win32api/1/ReleaseCapture.html",
    "type": "鼠标输入函数",
    "name": "ReleaseCapture",
    "desc": "该函数从当前线程中的窗口释放鼠标捕获，并恢复通常的鼠标输入处理"
}, {
    "path": "win32api/1/SetCapture.html",
    "type": "鼠标输入函数",
    "name": "SetCapture",
    "desc": "该函数在属于当前线程的指定窗口里设置鼠标捕获"
}, {
    "path": "win32api/1/SetDoubleCllckTime.html",
    "type": "鼠标输入函数",
    "name": "SetDoubleCllckTime",
    "desc": "该函数为鼠标设置双击时间"
}, {
    "path": "win32api/1/SwapMouseButton.html",
    "type": "鼠标输入函数",
    "name": "SwapMouseButton",
    "desc": "该函数反转或恢复鼠标左右键的含义"
}, {
    "path": "win32api/1/TrackMouseEvent.html",
    "type": "鼠标输入函数",
    "name": "TrackMouseEvent",
    "desc": "当在指定时间内鼠标指针离开或盘旋在一个窗口上时，此函数寄送消息"
}, {
    "path": "win32api/1/CreateMDIWindow.html",
    "type": "多文档接口函数",
    "name": "CreateMDIWindow",
    "desc": "该函数创建一个多文档接口MDI的子窗口"
}, {
    "path": "win32api/1/DefFrameProc.html",
    "type": "多文档接口函数",
    "name": "DefFrameProc",
    "desc": "该函数对任何多文档接口（MDI）框架窗日的窗口过程不处理的窗口消息提供缺省处理"
}, {
    "path": "win32api/1/DefMDIChildProc.html",
    "type": "多文档接口函数",
    "name": "DefMDIChildProc",
    "desc": "该函数对任何多文档接口（MDI）子窗口的窗口过程不能处理的窗口消息提供缺省处理"
}, {
    "path": "win32api/1/TranslateMdISysAccel.html",
    "type": "多文档接口函数",
    "name": "TranslateMdISysAccel",
    "desc": "该函数处理与指定MDI客户窗口相联系的多文档接口（MDI）子窗口的菜单命令的加速键响应"
}, {
    "path": "win32api/1/BeginUpdateResource.html",
    "type": "资源函数",
    "name": "BeginUpdateResource",
    "desc": "该函数返回一个可被UpdateResource函数使用的句柄以便在一个可执行文件中增加、删除或替换资源"
}, {
    "path": "win32api/1/CopyImage.html",
    "type": "资源函数",
    "name": "CopyImage",
    "desc": "该函数创建一个新的图像（图标、光标、位图）并复制该指定图像的属性到新的图像"
}, {
    "path": "win32api/1/EndUpdateResource.html",
    "type": "资源函数",
    "name": "EndUpdateResource",
    "desc": "该函数终止在可执行文件中的资源更新"
}, {
    "path": "win32api/1/EnumResLangProc.html",
    "type": "资源函数",
    "name": "EnumResLangProc",
    "desc": "该函数是一个用户定义的和EnumResourceLanguages函数一起使用的回调函数"
}, {
    "path": "win32api/1/EnumResNameProc.html",
    "type": "资源函数",
    "name": "EnumResNameProc",
    "desc": "该函数是一个用户定义的和EnumResourceNames函数一起使用的回调函数"
}, {
    "path": "win32api/1/EnumResourceLanguages.html",
    "type": "资源函数",
    "name": "EnumResourceLanguages",
    "desc": "该函数为每个指定类型和名称的资源搜索模块，并且向定义的回调函数传递所搜寻到的每种资源语言"
}, {
    "path": "win32api/1/EnumResourceNames.html",
    "type": "资源函数",
    "name": "EnumResourceNames",
    "desc": "该函数为每个指定类型的资源搜寻模块，并将每个查找到的资源名称传递给回调函数"
}, {
    "path": "win32api/1/EnumResourceTypes.html",
    "type": "资源函数",
    "name": "EnumResourceTypes",
    "desc": "该函数为资源搜寻模块并且将它找到的每个资源类型传递给用户定义的回调函数"
}, {
    "path": "win32api/1/EnumResTypeProc.html",
    "type": "资源函数",
    "name": "EnumResTypeProc",
    "desc": "该函数是一个用户定义的和EnumResourceTypes函数一起使用的回调函数"
}, {
    "path": "win32api/1/FlndResource.html",
    "type": "资源函数",
    "name": "FlndResource",
    "desc": "该函数确定指定模块中指定类型和名称的资源所在位置"
}, {
    "path": "win32api/1/FindResourceEx.html",
    "type": "资源函数",
    "name": "FindResourceEx",
    "desc": "该函数确定指定模块中指定类型、名称及语言的资源所在位置"
}, {
    "path": "win32api/1/LoadImage.html",
    "type": "资源函数",
    "name": "LoadImage",
    "desc": "该函数装载目标，光标，或位图"
}, {
    "path": "win32api/1/LoadResource.html",
    "type": "资源函数",
    "name": "LoadResource",
    "desc": "该函数装载指定资源到全局存储器"
}, {
    "path": "win32api/1/LockResource.html",
    "type": "资源函数",
    "name": "LockResource",
    "desc": "该函数锁定内存中的指定资源"
}, {
    "path": "win32api/1/SlzeofResource.html",
    "type": "资源函数",
    "name": "SlzeofResource",
    "desc": "该函数返回指定资源字节数大小"
}, {
    "path": "win32api/1/UpdateResource.html",
    "type": "资源函数",
    "name": "UpdateResource",
    "desc": "该函数增加，删除，或替代某可执行文件中的资源"
}, {
    "path": "win32api/1/FreeResource.html",
    "type": "资源函数",
    "name": "FreeResource",
    "desc": "该函数已过时"
}, {
    "path": "win32api/1/UnlockResource.html",
    "type": "资源函数",
    "name": "UnlockResource",
    "desc": "函数功能能：该函数已过时"
}, {
    "path": "win32api/1/EnableScrollBar.html",
    "type": "滚动条函数",
    "name": "EnableScrollBar",
    "desc": "该函数可以激活一个或两个滚动条箭头或是使其失效"
}, {
    "path": "win32api/1/GetScrolllnfo.html",
    "type": "滚动条函数",
    "name": "GetScrolllnfo",
    "desc": "该函数找到滚动条的参数，包括滚动条位置的最小值、最大值，页面大小，滚动按钮的位置，"
}, {
    "path": "win32api/1/ScrollDC.html",
    "type": "滚动条函数",
    "name": "ScrollDC",
    "desc": "该函数水平和垂直滚动一个位矩形"
}, {
    "path": "win32api/1/ScrollWindowEx.html",
    "type": "滚动条函数",
    "name": "ScrollWindowEx",
    "desc": "该函数滚动指定窗体客户区域的目录"
}, {
    "path": "win32api/1/SetScrolllnfo.html",
    "type": "滚动条函数",
    "name": "SetScrolllnfo",
    "desc": "该函数设置滚动条参数，包括滚动位置的最大值和最小值，页面大小，滚动按钮的位置"
}, {
    "path": "win32api/1/ShowScrollBar.html",
    "type": "滚动条函数",
    "name": "ShowScrollBar",
    "desc": "该函数显示或隐藏所指定的滚动条"
}, {
    "path": "win32api/1/GetScrollPos.html",
    "type": "滚动条函数",
    "name": "GetScrollPos",
    "desc": "该函数获取指定滚动条中滚动按钮的当前位置"
}, {
    "path": "win32api/1/GetScrollRange.html",
    "type": "滚动条函数",
    "name": "GetScrollRange",
    "desc": "获取指定滚动条中滚动按钮位置的当前最大最小值"
}, {
    "path": "win32api/1/ScrollWindow.html",
    "type": "滚动条函数",
    "name": "ScrollWindow",
    "desc": "该函数滚动所指定的窗体客户区域内容"
}, {
    "path": "win32api/1/SetScrollPos.html",
    "type": "滚动条函数",
    "name": "SetScrollPos",
    "desc": "该函数设置所指定滚动条中的滚动按钮的位置，如要求重画滚动条以反映出滚动按钮的新位置"
}, {
    "path": "win32api/1/SetScrollRange.html",
    "type": "滚动条函数",
    "name": "SetScrollRange",
    "desc": "该函数设置所指定滚动条位置的最大最小值"
}, {
    "path": "win32api/1/AdlustWindowRect.html",
    "type": "窗口函数",
    "name": "AdlustWindowRect",
    "desc": "该函数依据所需客户矩形的大小，计算需要的窗日矩形的大小"
}, {
    "path": "win32api/1/AdjustWindowRectEx.html",
    "type": "窗口函数",
    "name": "AdjustWindowRectEx",
    "desc": "该函数依据所需客户矩形大小，计算需要的窗口矩形的大小"
}, {
    "path": "win32api/1/AnImateWindow.html",
    "type": "窗口函数",
    "name": "AnImateWindow",
    "desc": "该函数能在显示与隐藏窗口时能产生特殊的效果"
}, {
    "path": "win32api/1/ArrangelconlcWindows.html",
    "type": "窗口函数",
    "name": "ArrangelconlcWindows",
    "desc": "该函数安排指定父窗口的各个最小化（图标化）子窗口"
}, {
    "path": "win32api/1/BeginDeferWindowPos.html",
    "type": "窗口函数",
    "name": "BeginDeferWindowPos",
    "desc": "该函数为一个多窗口位置结构分配内存并且返回该结构的句柄"
}, {
    "path": "win32api/1/BromgWindowToTop.html",
    "type": "窗口函数",
    "name": "BromgWindowToTop",
    "desc": "该函数将指定的窗口设置到Z序的顶部"
}, {
    "path": "win32api/1/CascadeWindows.html",
    "type": "窗口函数",
    "name": "CascadeWindows",
    "desc": "该函数层叠排列指定父窗口的各指定子窗口"
}, {
    "path": "win32api/1/ChildWindowFromaPoint.html",
    "type": "窗口函数",
    "name": "ChildWindowFromaPoint",
    "desc": "该函数确定属于某一父窗口的哪一个子窗口（如果存在的话）包含一个指定的点"
}, {
    "path": "win32api/1/ChildWindowFromaPointEx.html",
    "type": "窗口函数",
    "name": "ChildWindowFromaPointEx",
    "desc": "该函数确定属于父窗口的哪一个子窗口（如果存在的话）包含着指定的点"
}, {
    "path": "win32api/1/CloseWindow.html",
    "type": "窗口函数",
    "name": "CloseWindow",
    "desc": "该函数最小化指定的窗口，但并不销毁该窗口"
}, {
    "path": "win32api/1/Create Window.html",
    "type": "窗口函数",
    "name": "Create Window",
    "desc": "该函数创建一个重叠式窗口、弹出式窗口或子窗口"
}, {
    "path": "win32api/1/CreateWindowEx.html",
    "type": "窗口函数",
    "name": "CreateWindowEx",
    "desc": "该函数创建一个具有扩展风格的重叠式窗口、弹出式窗口或子窗口，其他与"
}, {
    "path": "win32api/1/DeferWindowPos.html",
    "type": "窗口函数",
    "name": "DeferWindowPos",
    "desc": "该函数为指定的窗口更新指定的多窗口位置结构，然后函数返回该更新结构的句柄"
}, {
    "path": "win32api/1/DestroyWindow.html",
    "type": "窗口函数",
    "name": "DestroyWindow",
    "desc": "是与函数EnumChilWindows一起使用的由应用程序定义的回调函数"
}, {
    "path": "win32api/1/EnableWindow.html",
    "type": "窗口函数",
    "name": "EnableWindow",
    "desc": "该函数允许或禁止指定的窗口或控制接受鼠标输入或键盘输入"
}, {
    "path": "win32api/1/EndDeferWindowPos.html",
    "type": "窗口函数",
    "name": "EndDeferWindowPos",
    "desc": "该函数在一个单一的屏幕刷新周期内同时更新一个或多个窗口的位置和大小"
}, {
    "path": "win32api/1/EnumChildProc.html",
    "type": "窗口函数",
    "name": "EnumChildProc",
    "desc": "该函数是由应用程序定义的，与函数EnumChildWindows一起使用的回调函数"
}, {
    "path": "win32api/1/EnumChildProc.html",
    "type": "窗口函数",
    "name": "EnumChildProc",
    "desc": "该函数是由应用程序定义的，与函数EnumChildWindows一起使用的回调函数"
}, {
    "path": "win32api/1/EnumTreadWindows.html",
    "type": "窗口函数",
    "name": "EnumTreadWindows",
    "desc": "该函数枚举所有与一个线程有关的非子窗口"
}, {
    "path": "win32api/1/EnumThreadWndProc.html",
    "type": "窗口函数",
    "name": "EnumThreadWndProc",
    "desc": "该函数枚举所有与一个线程相关联的非子窗口，办法是先将句柄传送给每一个窗口，随后传送给应用程序定义的回调函数"
}, {
    "path": "win32api/1/EnumWindows.html",
    "type": "窗口函数",
    "name": "EnumWindows",
    "desc": "该函数枚举所有屏幕上的顶层窗口，办法是先将句柄传给每一个窗口，然后再传送给应用程序定义的回调函数"
}, {
    "path": "win32api/1/EnumWindowsProc.html",
    "type": "窗口函数",
    "name": "EnumWindowsProc",
    "desc": "该函数是一个与EnumWindows或EnumDesktopWindows一起使用的应用程序定义的回调函数"
}, {
    "path": "win32api/1/FindWindow.html",
    "type": "窗口函数",
    "name": "FindWindow",
    "desc": "该函数获得一个顶层窗口的句柄，该窗口的类名和窗口名与给定的字符串相匹配"
}, {
    "path": "win32api/1/FlndWindowEx .html",
    "type": "窗口函数",
    "name": "FlndWindowEx ",
    "desc": "该函数获得一个窗口的句柄，该窗口的类名和窗口名与给定的字符串相匹配"
}, {
    "path": "win32api/1/GetClientRect .html",
    "type": "窗口函数",
    "name": "GetClientRect ",
    "desc": "该函数获取窗口客户区的坐标"
}, {
    "path": "win32api/1/GetDesktopWindow.html",
    "type": "窗口函数",
    "name": "GetDesktopWindow",
    "desc": "该函数返回桌面窗口的句柄"
}, {
    "path": "win32api/1/GetForegroundWindow.html",
    "type": "窗口函数",
    "name": "GetForegroundWindow",
    "desc": "该函数返回前台窗口（用户当前工作的窗口）"
}, {
    "path": "win32api/1/GetLastActivePopup.html",
    "type": "窗口函数",
    "name": "GetLastActivePopup",
    "desc": "该函数确定指定窗口中的哪一个弹出式窗口是最近活动的窗口"
}, {
    "path": "win32api/1/GetNextWindow.html",
    "type": "窗口函数",
    "name": "GetNextWindow",
    "desc": "该函数返回z序中的前一个或后一个窗口的句柄"
}, {
    "path": "win32api/1/GetParent.html",
    "type": "窗口函数",
    "name": "GetParent",
    "desc": "该函数获得一个指定子窗口的父窗口句柄"
}, {
    "path": "win32api/1/GetTopWindow.html",
    "type": "窗口函数",
    "name": "GetTopWindow",
    "desc": "该函数检查与特定父窗口相联的子窗口z序，并返回在z序顶部的子窗口的句柄"
}, {
    "path": "win32api/1/GetWindow.html",
    "type": "窗口函数",
    "name": "GetWindow",
    "desc": "该函数返回与指定窗口有特定关系（如Z序或所有者）的窗口句柄"
}, {
    "path": "win32api/1/GetWindowPlacement.html",
    "type": "窗口函数",
    "name": "GetWindowPlacement",
    "desc": "该函数返回指定窗口的显示状态以及被恢复的、最大化的和最小化的窗口位置"
}, {
    "path": "win32api/1/GetWindowRect.html",
    "type": "窗口函数",
    "name": "GetWindowRect",
    "desc": "该函数返回指定窗口的边框矩形的尺寸"
}, {
    "path": "win32api/1/GetWindowText.html",
    "type": "窗口函数",
    "name": "GetWindowText",
    "desc": "该函数将指定窗口的标题条文本（如果存在）拷贝到一个缓存区内"
}, {
    "path": "win32api/1/IsChild.html",
    "type": "窗口函数",
    "name": "IsChild",
    "desc": "该函数测试一个窗口是否是指定父窗口的子窗口或后代窗口"
}, {
    "path": "win32api/1/GetWindowTextLength.html",
    "type": "窗口函数",
    "name": "GetWindowTextLength",
    "desc": "该函数返回指定窗口的标题文本（如果存在）的字符长度"
}, {
    "path": "win32api/1/GetWlndowThreadprocessld.html",
    "type": "窗口函数",
    "name": "GetWlndowThreadprocessld",
    "desc": "该函数返回创建指定窗口线程的标识和创建窗口的进程的标识符，后一项是可选的"
}, {
    "path": "win32api/1/IsIconic.html",
    "type": "窗口函数",
    "name": "IsIconic",
    "desc": "该函数确定给定窗口是否是最小化（图标化）的窗口"
}, {
    "path": "win32api/1/IsWindow.html",
    "type": "窗口函数",
    "name": "IsWindow",
    "desc": "该函数确定给定的窗口句柄是否识别一个已存在的窗口"
}, {
    "path": "win32api/1/IsWindowUnicode.html",
    "type": "窗口函数",
    "name": "IsWindowUnicode",
    "desc": "该函数确定指定的窗口是否是一个本地Unicode窗口"
}, {
    "path": "win32api/1/IsWindowVlslble.html",
    "type": "窗口函数",
    "name": "IsWindowVlslble",
    "desc": "该函数获得给定窗口的可视状态"
}, {
    "path": "win32api/1/IsZoomed.html",
    "type": "窗口函数",
    "name": "IsZoomed",
    "desc": "该函数确定窗口是否是最大化的窗口"
}, {
    "path": "win32api/1/MoveWindow.html",
    "type": "窗口函数",
    "name": "MoveWindow",
    "desc": "该函数改变指定窗口的位置和尺寸"
}, {
    "path": "win32api/1/Openlcon.html",
    "type": "窗口函数",
    "name": "Openlcon",
    "desc": "该函数将一个最小化窗口恢复到原来的位置和尺寸并且激活该窗口"
}, {
    "path": "win32api/1/SetForegroundWindow.html",
    "type": "窗口函数",
    "name": "SetForegroundWindow",
    "desc": "该函数将创建指定窗口的线程设置到前台，并且激活该窗口"
}, {
    "path": "win32api/1/SetParent.html",
    "type": "窗口函数",
    "name": "SetParent",
    "desc": "该函数改变指定子窗口的父窗口"
}, {
    "path": "win32api/1/SetWindowLong.html",
    "type": "窗口函数",
    "name": "SetWindowLong",
    "desc": "该函数改变指定窗口的属性"
}, {
    "path": "win32api/1/SetWindowPlacement.html",
    "type": "窗口函数",
    "name": "SetWindowPlacement",
    "desc": "该函数设置指定窗口的显示状态和恢复，最大化，最小化位置"
}, {
    "path": "win32api/1/SetWindowPos.html",
    "type": "窗口函数",
    "name": "SetWindowPos",
    "desc": "该函数改变一个子窗口，弹出式窗口式顶层窗口的尺寸，位置和Z序"
}, {
    "path": "win32api/1/SetWindowText.html",
    "type": "窗口函数",
    "name": "SetWindowText",
    "desc": "该函数改变指定窗口的标题栏的文本内容（如果窗口有标题栏）"
}, {
    "path": "win32api/1/ShowOwnedPopups.html",
    "type": "窗口函数",
    "name": "ShowOwnedPopups",
    "desc": "该函数显示或隐藏属于指定窗口的所有弹出式窗口"
}, {
    "path": "win32api/1/ShowWindow.html",
    "type": "窗口函数",
    "name": "ShowWindow",
    "desc": "该函数设置指定窗口的显示状态"
}, {
    "path": "win32api/1/ShowWindowAsync.html",
    "type": "窗口函数",
    "name": "ShowWindowAsync",
    "desc": "该函数设置由不同线程产生的窗口的显示状态"
}, {
    "path": "win32api/1/TileWindows.html",
    "type": "窗口函数",
    "name": "TileWindows",
    "desc": "该函数并到显示指定父窗口的各指定子窗口"
}, {
    "path": "win32api/1/WindowFromPoint.html",
    "type": "窗口函数",
    "name": "WindowFromPoint",
    "desc": "该函数获得包含指定点的窗口的句柄"
}, {
    "path": "win32api/1/WinMain.html",
    "type": "窗口函数",
    "name": "WinMain",
    "desc": "该函数被系统调用，作为一个32位应用程序的入口点"
}, {
    "path": "win32api/1/AnyPopup.html",
    "type": "窗口函数",
    "name": "AnyPopup",
    "desc": "该函数指出一个被属窗口，可见窗口，顶级弹出窗口，或层叠窗日是否在屏幕上存在"
}, {
    "path": "win32api/1/EnumTaskWindows.html",
    "type": "窗口函数",
    "name": "EnumTaskWindows",
    "desc": "该函数已经过时，由EnumThreadwindows函数取代它"
}, {
    "path": "win32api/1/GetSysModalWindow.html",
    "type": "窗口函数",
    "name": "GetSysModalWindow",
    "desc": "该函数已经过时，该函数只是为与16位版的窗口程序兼容而提供的"
}, {
    "path": "win32api/1/GetWindowTask.html",
    "type": "窗口函数",
    "name": "GetWindowTask",
    "desc": "该函数已经过时，该函数只是为与16位版的窗口程序兼容而提供的"
}, {
    "path": "win32api/1/SetSysModalWindow.html",
    "type": "窗口函数",
    "name": "SetSysModalWindow",
    "desc": "该函数已经过时，该函数只是为与16位版的窗口程序兼容而提供的"
}, {
    "path": "win32api/2/GetClasslnfoEx.html",
    "type": "窗口类函数",
    "name": "GetClasslnfoEx",
    "desc": "该函数获得有关窗口类的信息，包括与窗口类相关的小图标的句柄的信息"
}, {
    "path": "win32api/2/GetClassLong.html",
    "type": "窗口类函数",
    "name": "GetClassLong",
    "desc": "该函数返回与指定窗口相关的WNDCLASSEX结构的指定32位值"
}, {
    "path": "win32api/2/GetClassName.html",
    "type": "窗口类函数",
    "name": "GetClassName",
    "desc": "该函数获得指定窗口所属的类的类名"
}, {
    "path": "win32api/2/GetWindowLong.html",
    "type": "窗口类函数",
    "name": "GetWindowLong",
    "desc": "该函数获得有关指定窗口的信息，函数也获得在额外窗口内存中指定偏移位地址的32位度整型值"
}, {
    "path": "win32api/2/RegisterClassEx.html",
    "type": "窗口类函数",
    "name": "RegisterClassEx",
    "desc": "该函数为随后在调用Createwindow函数和CreatewindowEx函数中使用的窗口注册一个窗口类"
}, {
    "path": "win32api/2/SetClassLong.html",
    "type": "窗口类函数",
    "name": "SetClassLong",
    "desc": "该函数替换在额外类存储空间的指定偏移地址的32位长整型值，或替换指定窗口所属类的WNDCLASSEX结构"
}, {
    "path": "win32api/2/SetWindowLong.html",
    "type": "窗口类函数",
    "name": "SetWindowLong",
    "desc": "该函数改变指定窗口的属性．函数也将指定的一个32位值设置在窗口的额外存储空间的指定偏移位置"
}, {
    "path": "win32api/2/GetClasslnfoEx(1).html",
    "type": "窗口类函数",
    "name": "GetClasslnfoEx",
    "desc": "该函数获得有关一个窗口类的信息"
}, {
    "path": "win32api/2/GetClassWord.html",
    "type": "窗口类函数",
    "name": "GetClassWord",
    "desc": "该函数在窗口类的额外存储空间中的指定偏移地址获取指定窗口所属窗口类的16位值"
}, {
    "path": "win32api/2/GetWindowWord.html",
    "type": "窗口类函数",
    "name": "GetWindowWord",
    "desc": "该函数已经过时"
}, {
    "path": "win32api/2/RegisterClass.html",
    "type": "窗口类函数",
    "name": "RegisterClass",
    "desc": "该函数注册在随后调用CreateWindow函数和CreateWindowEx函数中使用的窗口类"
}, {
    "path": "win32api/2/SetClassWord.html",
    "type": "窗口类函数",
    "name": "SetClassWord",
    "desc": "该函数替换指定窗口所属的窗口类的额外存储空间中的指定偏移地址的16位值"
}, {
    "path": "win32api/2/SetWindowWord.html",
    "type": "窗口类函数",
    "name": "SetWindowWord",
    "desc": "该函数已经过时"
}, {
    "path": "win32api/2/CallWindowProc.html",
    "type": "窗口过程函数",
    "name": "CallWindowProc",
    "desc": "该函数CallWindowProc将消息信息传送给指定的窗口过程"
}, {
    "path": "win32api/2/DefWindowProc.html",
    "type": "窗口过程函数",
    "name": "DefWindowProc",
    "desc": "该函数调用缺省的窗口过程来为应用程序没有处理的任何窗口消息提供缺省的处理"
}, {
    "path": "win32api/2/WindowProc.html",
    "type": "窗口过程函数",
    "name": "WindowProc",
    "desc": "该函数是一个应用程序定义的函数"
}, {
    "path": "win32api/2/EnumProps.html",
    "type": "窗口属性函数",
    "name": "EnumProps",
    "desc": "该函数将窗口属性表中的所有项列举出来，一个一个地传送给指定的回调函数，直到列举到最后一项，或者回调函数返回FALSE为止"
}, {
    "path": "win32api/2/EnumPropsEx.html",
    "type": "窗口属性函数",
    "name": "EnumPropsEx",
    "desc": "该函数将窗口属性表中的所有项列举出来，依次传送给指定的回调函数，直到列举到最后一项，或者回调函数返回FALSE为止"
}, {
    "path": "win32api/2/GetProp.html",
    "type": "窗口属性函数",
    "name": "GetProp",
    "desc": "该函数从给定窗口的属性列表中检索数据句柄"
}, {
    "path": "win32api/2/PropEnumProcEx.html",
    "type": "窗口属性函数",
    "name": "PropEnumProcEx",
    "desc": "该函数是一个应用程序定义的回调函数，它与EnumPropsEx函数一同使用"
}, {
    "path": "win32api/2/RemoveProp.html",
    "type": "窗口属性函数",
    "name": "RemoveProp",
    "desc": "该函数从指定的窗口的属性表中删除一项"
}, {
    "path": "win32api/2/SetProp.html",
    "type": "窗口属性函数",
    "name": "SetProp",
    "desc": "该函数在指定窗口的属性表中增加一个新项，或者修改一个现有项"
}, {
    "path": "win32api/2/AlphaBlend.html",
    "type": "位图函数",
    "name": "AlphaBlend",
    "desc": "该函数用来显示透明或半透明像素的位图"
}, {
    "path": "win32api/2/BitBlt.html",
    "type": "位图函数",
    "name": "BitBlt",
    "desc": "该函数对指定的源设备环境区域中的像素进行位块（bit_block）转换，以传送到目标设备环境"
}, {
    "path": "win32api/2/CreateBitmap.html",
    "type": "位图函数",
    "name": "CreateBitmap",
    "desc": "该函数创建一个带有特定宽度、高度和颜色格式的位图"
}, {
    "path": "win32api/2/CreateBitmaplndirect.html",
    "type": "位图函数",
    "name": "CreateBitmaplndirect",
    "desc": "该函数可以创建一个具有特定宽度、高度和颜色格式的位图"
}, {
    "path": "win32api/2/CreateCompatibleBitmap.html",
    "type": "位图函数",
    "name": "CreateCompatibleBitmap",
    "desc": "该函数创建与指定的设备环境相关的设备兼容的位图"
}, {
    "path": "win32api/2/CreateDIBitmap.html",
    "type": "位图函数",
    "name": "CreateDIBitmap",
    "desc": "该函数由与设备无关的位图（DIB）创建与设备有关的位图（DDB），并且有选择地为位图置位"
}, {
    "path": "win32api/2/CreateDIBSection.html",
    "type": "位图函数",
    "name": "CreateDIBSection",
    "desc": "该函数创建应用程序可以直接写入的、与设备无关的位图（DIB）"
}, {
    "path": "win32api/2/ExtFloodFill.html",
    "type": "位图函数",
    "name": "ExtFloodFill",
    "desc": "该函数将使用当前刷子填充显示表面区域"
}, {
    "path": "win32api/2/GetBitmapDimensionEx.html",
    "type": "位图函数",
    "name": "GetBitmapDimensionEx",
    "desc": "该函数用来检索位图的大小（维数）"
}, {
    "path": "win32api/2/GetDIBColorTable.html",
    "type": "位图函数",
    "name": "GetDIBColorTable",
    "desc": "该函数从DIB位图的颜色表中检索RGB（红、绿、蓝）颜色值，此DIB位图是当前选入指定设备环境中的位图"
}, {
    "path": "win32api/2/GetDIBits.html",
    "type": "位图函数",
    "name": "GetDIBits",
    "desc": "GetDIBits函数检取指定位图的信息，并将其以指定格式复制到一个缓冲区中"
}, {
    "path": "win32api/2/GetPixel.html",
    "type": "位图函数",
    "name": "GetPixel",
    "desc": "该函数检索指定坐标点的像素的RGB颜色值"
}, {
    "path": "win32api/2/GetStretchBltMode.html",
    "type": "位图函数",
    "name": "GetStretchBltMode",
    "desc": "该函数获取当前伸展（也称展宽）模式"
}, {
    "path": "win32api/2/GradientFill.html",
    "type": "位图函数",
    "name": "GradientFill",
    "desc": "该函数填充矩形和三角形结构"
}, {
    "path": "win32api/2/PlgBlt.html",
    "type": "位图函数",
    "name": "PlgBlt",
    "desc": "该函数对源设备环境中指定的矩形区域中的颜色数据位进行位块转换，并转换到目标设备环境中指定的平行四边形里"
}, {
    "path": "win32api/2/SetDIBits.html",
    "type": "位图函数",
    "name": "SetDIBits",
    "desc": "该函数使用指定的DIB位图中发现的颜色数据来设置位图中的像素"
}, {
    "path": "win32api/2/SetBitmapDimensionEx.html",
    "type": "位图函数",
    "name": "SetBitmapDimensionEx",
    "desc": "该函数为位图指定首选的大小"
}, {
    "path": "win32api/2/MaskBlt.html",
    "type": "位图函数",
    "name": "MaskBlt",
    "desc": "该函数使用特定的掩码和光栅操作来对源和目标位图的颜色数据进行组合"
}, {
    "path": "win32api/2/SetDIBColorTable.html",
    "type": "位图函数",
    "name": "SetDIBColorTable",
    "desc": "该函数用来对目前进入指定设备环境的设备无关位图（DIB）颜色表中的项设置RGB（红、绿、蓝）颜色值"
}, {
    "path": "win32api/2/SetDIBitsToDevice.html",
    "type": "位图函数",
    "name": "SetDIBitsToDevice",
    "desc": "该函数使用DIB位图和颜色数据对与目标设备环境相关的设备上的指定矩形中的像素进行设置"
}, {
    "path": "win32api/2/SetPixel.html",
    "type": "位图函数",
    "name": "SetPixel",
    "desc": "该函数将指定坐标处的像素设为指定的颜色"
}, {
    "path": "win32api/2/SetPixeIV.html",
    "type": "位图函数",
    "name": "SetPixeIV",
    "desc": "该函数将指定坐标处的像素设置为与指定颜色最接近的颜色，该像素点必须在剪辑区和设备表面的可视部分内"
}, {
    "path": "win32api/2/SetStretchBltMode.html",
    "type": "位图函数",
    "name": "SetStretchBltMode",
    "desc": "该函数可以设置指定设备环境中的位图拉伸模式"
}, {
    "path": "win32api/2/StretchBlt.html",
    "type": "位图函数",
    "name": "StretchBlt",
    "desc": "函数从源矩形中复制一个位图到目标矩形，必要时按目前目标设备设置的模式进行图像的拉伸或压缩"
}, {
    "path": "win32api/2/StretchDIBits.html",
    "type": "位图函数",
    "name": "StretchDIBits",
    "desc": "该函数将DIB中矩形区域内像素使用的颜色数据拷贝到指定的目标矩形中"
}, {
    "path": "win32api/2/TransparentBlt.html",
    "type": "位图函数",
    "name": "TransparentBlt",
    "desc": "该函数对指定的源设备环境中的矩形区域像素的颜色数据进行位块（bit_block）转换，并将结果置于目标设备环境"
}, {
    "path": "win32api/2/CreateDiscardableBitmap.html",
    "type": "位图函数",
    "name": "CreateDiscardableBitmap",
    "desc": "该函数创建与指定设备兼容的位图，这种位图是已淘汰的，它具有与设备一样的位／像素格式和颜色调色板"
}, {
    "path": "win32api/2/FloodFill.html",
    "type": "位图函数",
    "name": "FloodFill",
    "desc": "该函数用当前刷子填充显示区域"
}, {
    "path": "win32api/2/GetBitmapBits.html",
    "type": "位图函数",
    "name": "GetBitmapBits",
    "desc": "该函数将指定位图的位拷贝到缓冲区里"
}, {
    "path": "win32api/2/LoadBitmap.html",
    "type": "位图函数",
    "name": "LoadBitmap",
    "desc": "该函数从模块的可执行文件中加载指定的位图资源"
}, {
    "path": "win32api/2/SetBitmapBits.html",
    "type": "位图函数",
    "name": "SetBitmapBits",
    "desc": "该函数将位图的颜色数据位设置成指定值"
}, {
    "path": "win32api/3/CreateBrushlndirect.html",
    "type": "笔刷函数",
    "name": "CreateBrushlndirect",
    "desc": "该函数可以创建具有指定风格、颜色和模式的逻辑刷子"
}, {
    "path": "win32api/3/CreateDIBPatternBrushPt.html",
    "type": "笔刷函数",
    "name": "CreateDIBPatternBrushPt",
    "desc": "该函数可以创建一个具有DIB（与设备无在的位图）指定模式的逻辑刷子"
}, {
    "path": "win32api/3/CreateHatchBrush.html",
    "type": "笔刷函数",
    "name": "CreateHatchBrush",
    "desc": "该函数可以创建一个具有指定阴影模式和颜色的逻辑刷子"
}, {
    "path": "win32api/3/CreatePatternBrush.html",
    "type": "笔刷函数",
    "name": "CreatePatternBrush",
    "desc": "该函数可以创建具有指定位图模式的逻辑刷子，该位图不能是DIB类型的位图，DIB位图是由CreateDIBSection函数创建的"
}, {
    "path": "win32api/3/CreateSolidBrush.html",
    "type": "笔刷函数",
    "name": "CreateSolidBrush",
    "desc": "该函数创建一个具有指定颜色的逻辑刷子"
}, {
    "path": "win32api/3/GetBrushOrgEx.html",
    "type": "笔刷函数",
    "name": "GetBrushOrgEx",
    "desc": "该函数可检索用于指定设备环境的当前刷子的起始点，该函数替代了函数GetBrush Org"
}, {
    "path": "win32api/3/GetSysColorBrush.html",
    "type": "笔刷函数",
    "name": "GetSysColorBrush",
    "desc": "该函数可以检索标识逻辑刷子的句柄，该刷子对应指定的颜色索引值"
}, {
    "path": "win32api/3/PatBlt.html",
    "type": "笔刷函数",
    "name": "PatBlt",
    "desc": "该函数使用当前选入指定设备环境中的刷子绘制给定的矩形区域"
}, {
    "path": "win32api/3/SetBrushOrgEx.html",
    "type": "笔刷函数",
    "name": "SetBrushOrgEx",
    "desc": "该函数设置刷子起始点，GDI将该起始点赋给应用程序选入指定设备环境的下一个刷子"
}, {
    "path": "win32api/3/CreateDIBPatternBrush.html",
    "type": "笔刷函数",
    "name": "CreateDIBPatternBrush",
    "desc": "该函数创建一个逻辑刷子，该刷子的模式由指定的DIB（与设备无关位图）位图来指定"
}, {
    "path": "win32api/3/FixBrushOrgEx.html",
    "type": "笔刷函数",
    "name": "FixBrushOrgEx",
    "desc": "在Win32API中没有实现FixBrushOrgEx函数，在这里提供出来是考虑与Win32的兼容性，如果调用它，那么该函数什么也不做，并且返回FALSE"
}, {
    "path": "win32api/3/ExcludeClipRect.html",
    "type": "剪切函数",
    "name": "ExcludeClipRect",
    "desc": "该函数的功能是创建一个新的剪切区域，该区域由一个现存的剪切区域减去一个特定的矩形区域而构成"
}, {
    "path": "win32api/3/ExtSelectClipRgn.html",
    "type": "剪切函数",
    "name": "ExtSelectClipRgn",
    "desc": "访函数通过特定的方式把一个特定的区域与当前的剪切区域合并在一起"
}, {
    "path": "win32api/3/GetClipBox.html",
    "type": "剪切函数",
    "name": "GetClipBox",
    "desc": "该函数得到一个能够完包含当前可见区域的最小矩形的大小"
}, {
    "path": "win32api/3/GetClipRgn.html",
    "type": "剪切函数",
    "name": "GetClipRgn",
    "desc": "该函数得到一个句柄，该句柄标识了由当前应用定义的剪切区域"
}, {
    "path": "win32api/3/GetMetaRgn.html",
    "type": "剪切函数",
    "name": "GetMetaRgn",
    "desc": "该函数得到特定设备环境的当前元区域"
}, {
    "path": "win32api/3/IntersectClipRect.html",
    "type": "剪切函数",
    "name": "IntersectClipRect",
    "desc": "该函数创建了一个新的剪切区域，该区域是当前剪切区域和一个特定矩形的交集"
}, {
    "path": "win32api/3/OffsetClipRgn.html",
    "type": "剪切函数",
    "name": "OffsetClipRgn",
    "desc": "该函数按指定的位移，移动设备上下文环境的剪切区域"
}, {
    "path": "win32api/3/PtVisible.html",
    "type": "剪切函数",
    "name": "PtVisible",
    "desc": "该函数确定指定的点是否在设备环境的剪切区域之内"
}, {
    "path": "win32api/3/RectVisible.html",
    "type": "剪切函数",
    "name": "RectVisible",
    "desc": "该函数确定指定矩形的任何部分是否在设备上下文环境的剪切区域之内"
}, {
    "path": "win32api/3/SelectClipRgn.html",
    "type": "剪切函数",
    "name": "SelectClipRgn",
    "desc": "该函数选择一个区域作为指定设备环境的当前剪切区域"
}, {
    "path": "win32api/3/SetMetaRgn.html",
    "type": "剪切函数",
    "name": "SetMetaRgn",
    "desc": "该函数使指定设备环境的当前剪切区域与当前的元区域产生一个交集，并把该交集区域保存为指定设备环境的新的元区域"
}, {
    "path": "win32api/3/SelectClipPath.html",
    "type": "剪切函数",
    "name": "SelectClipPath",
    "desc": "该函数选择当前的路径作为设备环境的一个剪切区域"
}, {
    "path": "win32api/3/AnimatePale.html",
    "type": "颜色函数",
    "name": "AnimatePale",
    "desc": "该函数替换指定逻辑调色板上的入口点"
}, {
    "path": "win32api/3/CreatHalftonePalette.html",
    "type": "颜色函数",
    "name": "CreatHalftonePalette",
    "desc": "该函数创建一个指定设备环境的半色调调色板"
}, {
    "path": "win32api/3/CreatePalette.html",
    "type": "颜色函数",
    "name": "CreatePalette",
    "desc": "该函数创建一个逻辑彩色调色板"
}, {
    "path": "win32api/3/GetColorAdjustment.html",
    "type": "颜色函数",
    "name": "GetColorAdjustment",
    "desc": "该函数检取指定设备环境的颜色调整值"
}, {
    "path": "win32api/3/GetNearestColor.html",
    "type": "颜色函数",
    "name": "GetNearestColor",
    "desc": "该函数返回一个颜色值，该值和系统调色板的一个颜色相一致，当使用一个特定的颜色值时，该颜色被显示"
}, {
    "path": "win32api/3/GetNearestPaletteIndex.html",
    "type": "颜色函数",
    "name": "GetNearestPaletteIndex",
    "desc": "该函数检取指定逻辑调色板入口的索引，以与一个特定的颜色值相匹配"
}, {
    "path": "win32api/3/GetPaletteEntries.html",
    "type": "颜色函数",
    "name": "GetPaletteEntries",
    "desc": "该函数从给定的逻辑调色板中提出指定范围的调色板项目"
}, {
    "path": "win32api/3/GetSystempaletteEntries.html",
    "type": "颜色函数",
    "name": "GetSystempaletteEntries",
    "desc": "该函数从与指定设备环境有关系的系统调色板中检取调色板入口点的范围"
}, {
    "path": "win32api/3/GetSystemPaletteUse.html",
    "type": "颜色函数",
    "name": "GetSystemPaletteUse",
    "desc": "该函数检取特定设备环境的系统调色板的当前状态"
}, {
    "path": "win32api/3/HTUI_ColorAdjustment.html",
    "type": "颜色函数",
    "name": "HTUI_ColorAdjustment",
    "desc": "该函数显示中间色调色彩调整的缺省用户接口"
}, {
    "path": "win32api/3/HTUI_DeviceColorAdjustment.html",
    "type": "颜色函数",
    "name": "HTUI_DeviceColorAdjustment",
    "desc": "该函数显示一个指定设备的调整颜色的用户界面，例如打印机"
}, {
    "path": "win32api/3/RealizePalette.html",
    "type": "颜色函数",
    "name": "RealizePalette",
    "desc": "该函数从当前逻辑调色板中映射调色板入口点到系统调色板中"
}, {
    "path": "win32api/3/ResizePalette.html",
    "type": "颜色函数",
    "name": "ResizePalette",
    "desc": "该函数增大或减小基于指定值的逻辑调色板的大小"
}, {
    "path": "win32api/3/SelectPalette.html",
    "type": "颜色函数",
    "name": "SelectPalette",
    "desc": "该函数选择指定的逻辑调色板到一个设备环境中"
}, {
    "path": "win32api/3/SetColorAdjustment.html",
    "type": "颜色函数",
    "name": "SetColorAdjustment",
    "desc": "该函数为一个使用指定值的设备环境设置颜色调整值"
}, {
    "path": "win32api/3/SetPaletteEntrles.html",
    "type": "颜色函数",
    "name": "SetPaletteEntrles",
    "desc": "该函数为一个逻辑调色板的入口点数组设置RGB颜色值和标志"
}, {
    "path": "win32api/3/SetSystemPaletteUse.html",
    "type": "颜色函数",
    "name": "SetSystemPaletteUse",
    "desc": "该函数允许一个应用指定系统调色板包含2个或20个静态颜色"
}, {
    "path": "win32api/3/UnrealizeObject.html",
    "type": "颜色函数",
    "name": "UnrealizeObject",
    "desc": "该函数重置一个逻辑调色板"
}, {
    "path": "win32api/3/UpdateColors.html",
    "type": "颜色函数",
    "name": "UpdateColors",
    "desc": "该函数通过把客户区域的当前颜色重新映射到发前被映射过的逻辑调色板，来更新指定设备环境的客户区域"
}, {
    "path": "win32api/3/ClientToscreen.html",
    "type": "坐标空间与变换函数",
    "name": "ClientToscreen",
    "desc": "该函数将指定点的用户坐标转换成屏幕坐标"
}, {
    "path": "win32api/3/DptoLP.html",
    "type": "坐标空间与变换函数",
    "name": "DptoLP",
    "desc": "该函数将设备坐标转变为逻辑坐标，转变依赖于设备的图形模式，窗口和坐标的起点及范围的设置，和转换的内容"
}, {
    "path": "win32api/3/CombineTransform.html",
    "type": "坐标空间与变换函数",
    "name": "CombineTransform",
    "desc": "该函数连接两个全局空间到页空间的转换"
}, {
    "path": "win32api/3/GetCurrentPositionEx.html",
    "type": "坐标空间与变换函数",
    "name": "GetCurrentPositionEx",
    "desc": "该函数获取逻辑坐标中的当前位置"
}, {
    "path": "win32api/3/GetMapMode.html",
    "type": "坐标空间与变换函数",
    "name": "GetMapMode",
    "desc": "该函数获取当前映射方式"
}, {
    "path": "win32api/3/GetViewportExtEx.html",
    "type": "坐标空间与变换函数",
    "name": "GetViewportExtEx",
    "desc": "该函数获取指定的设置环境的当前坐标的X和Y的范围"
}, {
    "path": "win32api/3/GetGraphicsMode.html",
    "type": "坐标空间与变换函数",
    "name": "GetGraphicsMode",
    "desc": "该函数为规定的设备环境获取当前的绘图模式"
}, {
    "path": "win32api/3/GetViewportOrgEx.html",
    "type": "坐标空间与变换函数",
    "name": "GetViewportOrgEx",
    "desc": "该函数为指定设备环境获取坐标原点的X坐标和Y坐标"
}, {
    "path": "win32api/3/GetWindowsExtEx.html",
    "type": "坐标空间与变换函数",
    "name": "GetWindowsExtEx",
    "desc": "该函数为指定的设备环境获取窗口的X和Y的范围"
}, {
    "path": "win32api/3/GetWindowOrgEx.html",
    "type": "坐标空间与变换函数",
    "name": "GetWindowOrgEx",
    "desc": "该函数为指定的设备环境获取窗口原点的X坐标和Y坐标"
}, {
    "path": "win32api/3/GetWorldTransform.html",
    "type": "坐标空间与变换函数",
    "name": "GetWorldTransform",
    "desc": "该函数获取当前全局空间到页面空间的转换"
}, {
    "path": "win32api/3/LptoDP.html",
    "type": "坐标空间与变换函数",
    "name": "LptoDP",
    "desc": "该函数把逻辑坐标转换为设备坐标，此转换依赖于设备环境的映射方式，原点的设置、窗口和观察口的范围及全局转换"
}, {
    "path": "win32api/3/MapWindowPoints.html",
    "type": "坐标空间与变换函数",
    "name": "MapWindowPoints",
    "desc": "该函数把相对于一个窗口的坐标空间的一组点映射成相对于另一窗口的坐标空  的一组点"
}, {
    "path": "win32api/3/Modify_WorldTransform.html",
    "type": "坐标空间与变换函数",
    "name": "Modify_WorldTransform",
    "desc": "该函数用指定的方式修改与设备环境有关的全局转换"
}, {
    "path": "win32api/3/OffsetViewportOrgEx.html",
    "type": "坐标空间与变换函数",
    "name": "OffsetViewportOrgEx",
    "desc": "该函数用指定的水平位移和垂直位移改变设备环境的观察窗原点"
}, {
    "path": "win32api/3/OffsetWindowOrgEx.html",
    "type": "坐标空间与变换函数",
    "name": "OffsetWindowOrgEx",
    "desc": "该函数用指定的水平位移和垂直位移改变设备环境的窗口原点"
}, {
    "path": "win32api/3/ScaleViewportExtEx.html",
    "type": "坐标空间与变换函数",
    "name": "ScaleViewportExtEx",
    "desc": "该函数用指定的乘数与除数按比例修改设备环境的视窗"
}, {
    "path": "win32api/3/ScaleWindowExtEx.html",
    "type": "坐标空间与变换函数",
    "name": "ScaleWindowExtEx",
    "desc": "该函数用指定的乘数和除数按比例来改变设备环境窗口"
}, {
    "path": "win32api/3/ScreenToClient.html",
    "type": "坐标空间与变换函数",
    "name": "ScreenToClient",
    "desc": "该函数把屏幕上指定点的屏幕坐标转换成用户坐标"
}, {
    "path": "win32api/3/SetGraphicsMode.html",
    "type": "坐标空间与变换函数",
    "name": "SetGraphicsMode",
    "desc": "该函数为指定的设备环境设置图形模式"
}, {
    "path": "win32api/3/SetMapMode.html",
    "type": "坐标空间与变换函数",
    "name": "SetMapMode",
    "desc": "该函数设置指定设备环境的映射方式，映射方式定义了将逻辑单位转换为设备单位的度量单位，并定义了设备的X、Y轴的方向"
}, {
    "path": "win32api/3/SetwindowOrgEx.html",
    "type": "坐标空间与变换函数",
    "name": "SetwindowOrgEx",
    "desc": "该函数用指定的坐标设置设备环境的窗口原点"
}, {
    "path": "win32api/3/SetWorldTransform.html",
    "type": "坐标空间与变换函数",
    "name": "SetWorldTransform",
    "desc": "该函数为指定的设备环境设置全局空间和页面空间之间的二维的线性转变，此转换可用于比例缩放、旋转、剪切或翻译图形的输出"
}, {
    "path": "win32api/3/SetViewportExtEx.html",
    "type": "坐标空间与变换函数",
    "name": "SetViewportExtEx",
    "desc": "该函数用指定的值来设置指定设备环境坐标的X轴、Y轴范围"
}, {
    "path": "win32api/3/CancelDc.html",
    "type": "设备环境函数",
    "name": "CancelDc",
    "desc": "该函数的功能是把设备上下文环境中悬而未决的操作取消"
}, {
    "path": "win32api/3/ChangeDisplaySettings.html",
    "type": "设备环境函数",
    "name": "ChangeDisplaySettings",
    "desc": "该函数把缺省显示设备的设置改变为由lpDevMode设定的图形模式，要改变一个特定显示设备的设置，请使用ChangeDisplaySettingEx函数"
}, {
    "path": "win32api/4/ChangeDisplaySettingsEx.html",
    "type": "设备环境函数",
    "name": "ChangeDisplaySettingsEx",
    "desc": "该函数把显示设备在lpszDeviceName参数中定义的设置，改变为在lpDevMode参数中定义的图形模式"
}, {
    "path": "win32api/4/CreateCompatibleDC.html",
    "type": "设备环境函数",
    "name": "CreateCompatibleDC",
    "desc": "该函数创建一个与指定设备兼容的内存设备上下文环境（DC）"
}, {
    "path": "win32api/4/CreateDc.html",
    "type": "设备环境函数",
    "name": "CreateDc",
    "desc": "该函数通过使用指定的名字为一个设备创建设备上下文环境"
}, {
    "path": "win32api/4/CreateIC.html",
    "type": "设备环境函数",
    "name": "CreateIC",
    "desc": "该函数为指定设备创建一个信息描述表，该信息描述表能在不创建设备上下文环境的情况下提供一种快速得到设备信息的方法"
}, {
    "path": "win32api/4/DeleteDc.html",
    "type": "设备环境函数",
    "name": "DeleteDc",
    "desc": "该函数删除指定的设备上下文环境（Dc）"
}, {
    "path": "win32api/4/DeleteObject.html",
    "type": "设备环境函数",
    "name": "DeleteObject",
    "desc": "该函数删除一个逻辑笔、画笔、字体、位图、区域或者调色板，释放所有与该对象有关的系统资源，在对象被删除之后，指定的句柄也就失效了"
}, {
    "path": "win32api/4/DeviceCapabilities.html",
    "type": "设备环境函数",
    "name": "DeviceCapabilities",
    "desc": "该函数检索打印机设备驱动器的性能"
}, {
    "path": "win32api/4/DrawEscape.html",
    "type": "设备环境函数",
    "name": "DrawEscape",
    "desc": "该函数存取视频显示的画图能力，该视频显示不能直接通过图形设备接口（GDI）使用"
}, {
    "path": "win32api/4/EnumDisplayDevices.html",
    "type": "设备环境函数",
    "name": "EnumDisplayDevices",
    "desc": "该函数可得到系统中显示设备的信息"
}, {
    "path": "win32api/4/EnumDisplaySettings.html",
    "type": "设备环境函数",
    "name": "EnumDisplaySettings",
    "desc": "该函数得到显示设备的一个图形模式设备，通过对该函数一系列的调用可以得到显示设备所有的图形模式信息"
}, {
    "path": "win32api/4/EnumObjectsProc.html",
    "type": "设备环境函数",
    "name": "EnumObjectsProc",
    "desc": "该函数是应用程序定义的回调函数，为EnumObjects函数一起使用"
}, {
    "path": "win32api/4/EnumObjects.html",
    "type": "设备环境函数",
    "name": "EnumObjects",
    "desc": "该函数为指定的设备上下文环境枚举可用的笔或画笔，对于每个可用对象，该函数调用应用程序定义的回调函数，提供数据描述该对象"
}, {
    "path": "win32api/4/GetCurrentObject.html",
    "type": "设备环境函数",
    "name": "GetCurrentObject",
    "desc": "该函数得到一个从特定类型中选定目标的设备对象句柄"
}, {
    "path": "win32api/4/GetDC.html",
    "type": "设备环境函数",
    "name": "GetDC",
    "desc": "该函数检索一指定窗口的客户区域或整个屏幕的显示设备上下文环境的句柄，以后可以在GDI函数中使用该句柄来在设备上下文环境中绘图"
}, {
    "path": "win32api/4/GetDCBrushColor.html",
    "type": "设备环境函数",
    "name": "GetDCBrushColor",
    "desc": "该函数确认将要返回画笔颜色的设备上下文环境（DC）"
}, {
    "path": "win32api/4/GetDCEx.html",
    "type": "设备环境函数",
    "name": "GetDCEx",
    "desc": "该函数检索指定窗口客户区域或整个屏幕的显示设备上下文环境的句柄，在随后的GDI函数中可以使用该句柄在设备上下文环境中绘图"
}, {
    "path": "win32api/4/GetDCOrgEx.html",
    "type": "设备环境函数",
    "name": "GetDCOrgEx",
    "desc": "该函数得到设备上下文环境的最终转换原点，最终转换原点指定了一个位移"
}, {
    "path": "win32api/4/GetDCPenColor.html",
    "type": "设备环境函数",
    "name": "GetDCPenColor",
    "desc": "该函数设置当前DC笔颜色为指定颜色，如果设备不能提供指定颜色值，将返回最近的物理颜色"
}, {
    "path": "win32api/4/GetDeviceCaps.html",
    "type": "设备环境函数",
    "name": "GetDeviceCaps",
    "desc": "该函数检索指定设备的设备指定信息"
}, {
    "path": "win32api/4/GetObject.html",
    "type": "设备环境函数",
    "name": "GetObject",
    "desc": "该函数得到指定图形对象的信息，根据图形对象，函数把填满的或结构，或表项（用于逻辑调色板）数目放入一个指定的缓冲区"
}, {
    "path": "win32api/4/GetObjectType.html",
    "type": "设备环境函数",
    "name": "GetObjectType",
    "desc": "该函数确定指定对象的类型"
}, {
    "path": "win32api/4/GetStockObject.html",
    "type": "设备环境函数",
    "name": "GetStockObject",
    "desc": "该函数检索预定义的备用笔、刷子、字体或者调色板的句柄"
}, {
    "path": "win32api/4/ReleaseDC.html",
    "type": "设备环境函数",
    "name": "ReleaseDC",
    "desc": "函数释放设备上下文环境（DC）供其他应用程序使用"
}, {
    "path": "win32api/4/ResetDC.html",
    "type": "设备环境函数",
    "name": "ResetDC",
    "desc": "该函数根据指定结构中的信息更新给定打印机或绘图仪的设备上下文环境"
}, {
    "path": "win32api/4/RestoreDC.html",
    "type": "设备环境函数",
    "name": "RestoreDC",
    "desc": "该函数恢复设备上下文环境（DC）到指定状态，该设备上下文环境的恢复是通过使状态信息出栈而进行的"
}, {
    "path": "win32api/4/SaveDC.html",
    "type": "设备环境函数",
    "name": "SaveDC",
    "desc": "该函数通过把数据描述选定对象和图形模式（如位图、画笔、调色板、字体、笔、区域、绘图模式、映射模式）拷贝到描述表推栈中为保存，指定设备上下文环境的当前状态"
}, {
    "path": "win32api/4/SelectObject.html",
    "type": "设备环境函数",
    "name": "SelectObject",
    "desc": "该函数选择一对象到指定的设备上下文环境中，该新对象替换先前的相同类型的对象"
}, {
    "path": "win32api/4/SetCBrushColor.html",
    "type": "设备环境函数",
    "name": "SetCBrushColor",
    "desc": "该函数把当前设备上下文环境（DC）画笔颜色设置为指定颜色值"
}, {
    "path": "win32api/4/SetDCPenColor.html",
    "type": "设备环境函数",
    "name": "SetDCPenColor",
    "desc": "函数功能；该函数把当前设备上下文环境（DC）的笔颜色设置为指定颜色值"
}, {
    "path": "win32api/4/Chord.html",
    "type": "填充形态函数",
    "name": "Chord",
    "desc": "该函数画一段圆弧，圆弧是由一个椭圆和一条线段（称之为割线）相交限定的闭合区域"
}, {
    "path": "win32api/4/Ellipse.html",
    "type": "填充形态函数",
    "name": "Ellipse",
    "desc": "该函数用于画一个椭圆，椭圆的中心是限定矩形的中心，使用当前画笔画椭圆，用当前的画刷填充椭圆"
}, {
    "path": "win32api/4/FillRect.html",
    "type": "填充形态函数",
    "name": "FillRect",
    "desc": "该函数用指定的画刷填充矩形，此函数包括矩形的左上边界，但不包括矩形的右下边界"
}, {
    "path": "win32api/4/FrameRect.html",
    "type": "填充形态函数",
    "name": "FrameRect",
    "desc": "该函数用指定的画刷为指定的矩形画边框"
}, {
    "path": "win32api/4/InvertRect.html",
    "type": "填充形态函数",
    "name": "InvertRect",
    "desc": "该函数通过对矩形内部的像素点进行逻辑NOT操作而将窗口中的矩形反转"
}, {
    "path": "win32api/4/Pie.html",
    "type": "填充形态函数",
    "name": "Pie",
    "desc": "该函数画一个由椭圆和两条半径相交闭合而成的饼状楔形图，此饼图由当前画笔画轮廓，由当前画刷填充"
}, {
    "path": "win32api/4/Polygon.html",
    "type": "填充形态函数",
    "name": "Polygon",
    "desc": "该函数画一个由直线相闻的两个以上顶点组成的多边形，用当前画笔画多边形轮廓，用当前画刷和多边形填充模式填充多边形"
}, {
    "path": "win32api/4/PolyPolygon.html",
    "type": "填充形态函数",
    "name": "PolyPolygon",
    "desc": "该函数画一系列的多边形，每一个多边形都用当前的画笔画轮廓，用当前的画刷和多边形填充模式画填充"
}, {
    "path": "win32api/4/Rectangle.html",
    "type": "填充形态函数",
    "name": "Rectangle",
    "desc": "该函数画一个矩形，用当前的画笔画矩形轮廓，用当前画刷进行填充"
}, {
    "path": "win32api/4/RoundRect.html",
    "type": "填充形态函数",
    "name": "RoundRect",
    "desc": "该函数画一个带圆角的矩形，此矩形由当前画笔画轮廊，由当前画刷填充"
}, {
    "path": "win32api/4/AddfFontResource.html",
    "type": "字体和正文函数",
    "name": "AddfFontResource",
    "desc": "该函数从指定的文件里增加字体资源到系统字体表，这些字体可随后被任何基于Win32的应用程序用来作正文输出"
}, {
    "path": "win32api/4/CreateFont.html",
    "type": "字体和正文函数",
    "name": "CreateFont",
    "desc": "该函数创建一种有特殊性的逻辑字体，此逻辑字体可以在后面被任何设备选择"
}, {
    "path": "win32api/4/CreateFontIndirect.html",
    "type": "字体和正文函数",
    "name": "CreateFontIndirect",
    "desc": "该函数创建一种在指定结构定义其特性的逻辑字体"
}, {
    "path": "win32api/4/CreateScalableFontResource.html",
    "type": "字体和正文函数",
    "name": "CreateScalableFontResource",
    "desc": "该函数为一种可升级的字体创建一个字体资源文件"
}, {
    "path": "win32api/4/DrawText.html",
    "type": "字体和正文函数",
    "name": "DrawText",
    "desc": "该函数在指定的矩形里写入格式化文本，根据指定的方法对文本格式化（扩展的制表符，字符对齐、折行等）"
}, {
    "path": "win32api/4/DrawtextEx.html",
    "type": "字体和正文函数",
    "name": "DrawtextEx",
    "desc": "该函数在指定的矩形内绘制正文"
}, {
    "path": "win32api/4/EnumFontFamiliesEx.html",
    "type": "字体和正文函数",
    "name": "EnumFontFamiliesEx",
    "desc": "该函数列举系统里所有符合由LOGFONT结构指定的字体特性的字体"
}, {
    "path": "win32api/4/EnumFontFamExProc.html",
    "type": "字体和正文函数",
    "name": "EnumFontFamExProc",
    "desc": "该函数是和函数EnumFontFamiliesEx一起使用的应用程序定义的回调函数，它用来处理字体"
}, {
    "path": "win32api/4/ExtTextOut.html",
    "type": "字体和正文函数",
    "name": "ExtTextOut",
    "desc": "该函数用当前选择的字体、背景颜色和正文颜色来绘制一个字符串"
}, {
    "path": "win32api/4/GetAspectRatioFilterEx.html",
    "type": "字体和正文函数",
    "name": "GetAspectRatioFilterEx",
    "desc": "该函数获得当前纵横比过滤器的设置"
}, {
    "path": "win32api/4/GetCharABCWidths.html",
    "type": "字体和正文函数",
    "name": "GetCharABCWidths",
    "desc": "该函数从当前TrueType字体里取得给定范围的连续字符的逻辑单位宽度，此函数仅对TrueType字体适用"
}, {
    "path": "win32api/4/GetCharABCWidthsFloat.html",
    "type": "字体和正文函数",
    "name": "GetCharABCWidthsFloat",
    "desc": "该函数取得当前字体里在一个指定范围里的连续字符的逻辑单位宽度"
}, {
    "path": "win32api/4/GetCharacterPlacement.html",
    "type": "字体和正文函数",
    "name": "GetCharacterPlacement",
    "desc": "该函数得到一个字符串的参数，如字符宽度、脱字符号定位、字符串的定序和字符翻译，返回信息的类型依赖于参数dwFlags和在给定显示环境里的当前选择字体，此函数将信息复制到指定的GCP_RESULTS结构里或一个或多个由此结构指定的数组里"
}, {
    "path": "win32api/4/GetCharWidth32.html",
    "type": "字体和正文函数",
    "name": "GetCharWidth32",
    "desc": "该函数用于取得当前字体在一个指定范围内的连续字符的逻辑坐标宽度"
}, {
    "path": "win32api/4/GetCharWidthFloat.html",
    "type": "字体和正文函数",
    "name": "GetCharWidthFloat",
    "desc": "该函数用于得到当前字体在一个指定范围内的连续字符的逻辑坐标宽度"
}, {
    "path": "win32api/4/GetFontData.html",
    "type": "字体和正文函数",
    "name": "GetFontData",
    "desc": "该函数得到一种字体的度量数据"
}, {
    "path": "win32api/4/GetFontLanguageInfo.html",
    "type": "字体和正文函数",
    "name": "GetFontLanguageInfo",
    "desc": "该函数返回指定的设备环境里所选字体的信息"
}, {
    "path": "win32api/4/GetFontUnicodeRange.html",
    "type": "字体和正文函数",
    "name": "GetFontUnicodeRange",
    "desc": "该函数返回关于一种字体支持哪些字符的信息，这些信息以GLYPHSET结构返回"
}, {
    "path": "win32api/4/GetGlyphIndices.html",
    "type": "字体和正文函数",
    "name": "GetGlyphIndices",
    "desc": "该函数将一个字符串转为字形下标的数组"
}, {
    "path": "win32api/4/GetGlyphOutline.html",
    "type": "字体和正文函数",
    "name": "GetGlyphOutline",
    "desc": "该函数取得被选进指定设备环境的TrueType字体的字符轮廓或位图"
}, {
    "path": "win32api/4/GetKerningPairs.html",
    "type": "字体和正文函数",
    "name": "GetKerningPairs",
    "desc": "该函数取得指定设备环境里的当前选择字体的字符紧缩对"
}, {
    "path": "win32api/4/GetOutlineTextMetrics.html",
    "type": "字体和正文函数",
    "name": "GetOutlineTextMetrics",
    "desc": "该函数获得TrueType字体的正文度量"
}, {
    "path": "win32api/4/GetRasterizerCaps.html",
    "type": "字体和正文函数",
    "name": "GetRasterizerCaps",
    "desc": "该函数返回表示系统中是否安装有TrueType字体的标志"
}, {
    "path": "win32api/4/GetTabbedTextExtent.html",
    "type": "字体和正文函数",
    "name": "GetTabbedTextExtent",
    "desc": "该函数计算一个字符串的宽度和高度"
}, {
    "path": "win32api/4/GetTextAlign.html",
    "type": "字体和正文函数",
    "name": "GetTextAlign",
    "desc": "该函数获得指定的设备环境下的文字对齐方式的设置"
}, {
    "path": "win32api/4/GetTextCharacterExtra.html",
    "type": "字体和正文函数",
    "name": "GetTextCharacterExtra",
    "desc": "该函数取得指定设备环境中当前字符间隔"
}, {
    "path": "win32api/4/GetTextColor.html",
    "type": "字体和正文函数",
    "name": "GetTextColor",
    "desc": "该函数取得指定设备环境的当前正文颜色"
}, {
    "path": "win32api/4/GetTextExtentExPoint.html",
    "type": "字体和正文函数",
    "name": "GetTextExtentExPoint",
    "desc": "该函数取得一个指定字符串里的字符数，该字符串将符合一个指定的空间，并且将其中每一个字符的范围放入一个数组"
}, {
    "path": "win32api/4/GetTextExtentPoint32.html",
    "type": "字体和正文函数",
    "name": "GetTextExtentPoint32",
    "desc": "该函数计算指定的正文字符串的高度和宽度"
}, {
    "path": "win32api/4/GetTextFace.html",
    "type": "字体和正文函数",
    "name": "GetTextFace",
    "desc": "该函数取得被选进指定设备环境的字体字样名"
}, {
    "path": "win32api/4/GetTextMetrics.html",
    "type": "字体和正文函数",
    "name": "GetTextMetrics",
    "desc": "该函数给指定的缓冲区里填入当前选择字体的度量值"
}, {
    "path": "win32api/4/PolyTextOut.html",
    "type": "字体和正文函数",
    "name": "PolyTextOut",
    "desc": "该函数在指定设备环境下以当前所选的字体和正文颜色绘制多个字符串"
}, {
    "path": "win32api/4/RemoveFontResource.html",
    "type": "字体和正文函数",
    "name": "RemoveFontResource",
    "desc": "该函数从系统字体表中除去在指定文件里的字体"
}, {
    "path": "win32api/4/SetMapperFlags.html",
    "type": "字体和正文函数",
    "name": "SetMapperFlags",
    "desc": "该函数改变字体映射程序用于将逻辑字体映射为物理字体的算法"
}, {
    "path": "win32api/5/SetTextAlign.html",
    "type": "字体和正文函数",
    "name": "SetTextAlign",
    "desc": "该函数为指定设备环境设置文字对齐标志"
}, {
    "path": "win32api/5/SetTextCharacterExtra.html",
    "type": "字体和正文函数",
    "name": "SetTextCharacterExtra",
    "desc": "该函数设置字符间隔，字符间隔加到每一个字符上，包括间隔字符，只要系统在写一个正文行"
}, {
    "path": "win32api/5/TabbedTextOut.html",
    "type": "字体和正文函数",
    "name": "TabbedTextOut",
    "desc": "该函数将一个字符串写到指定的位置，并按制表位位置数组里的值展开制表符"
}, {
    "path": "win32api/5/SetTextJustification.html",
    "type": "字体和正文函数",
    "name": "SetTextJustification",
    "desc": "该函数指定一定数量的空间，让系统增加到一个正文字符串的间隔字符上，当应用程序调用TextOut或ExtTextOut时，空间就地加进去"
}, {
    "path": "win32api/5/TextOut.html",
    "type": "字体和正文函数",
    "name": "TextOut",
    "desc": "该函数用当前选择字符、背景颜色和正文颜色将一个字符串写到指定位置"
}, {
    "path": "win32api/5/EnumFontFamilies.html",
    "type": "字体和正文函数",
    "name": "EnumFontFamilies",
    "desc": "该函数列举指定设备环境下的指定字体族里的字体"
}, {
    "path": "win32api/5/EnumFontFamilies.html",
    "type": "字体和正文函数",
    "name": "EnumFontFamilies",
    "desc": "该函数列举指定设备环境下的指定字体族里的字体"
}, {
    "path": "win32api/5/Enumfonts.html",
    "type": "字体和正文函数",
    "name": "Enumfonts",
    "desc": "该函数列举一个指定设备可用的字体，对那些有指定字样名的字体，EnumFonts取得该字体的信息，并将信息传给应用程序定义的回调函数"
}, {
    "path": "win32api/5/GetCharWidth.html",
    "type": "字体和正文函数",
    "name": "GetCharWidth",
    "desc": "该函数取得当前字体在一个指定范围内的连续字符的逻辑坐标宽度"
}, {
    "path": "win32api/5/GetTextExtenPoint.html",
    "type": "字体和正文函数",
    "name": "GetTextExtenPoint",
    "desc": "该函数计算指定的正文字符串的宽度和高度"
}, {
    "path": "win32api/5/EnumFontFamProc.html",
    "type": "字体和正文函数",
    "name": "EnumFontFamProc",
    "desc": "该函数是由应用程序定义的与函数EnumFontFamilies一起使用的回调函数，它接收用于描述与可用字体的数据"
}, {
    "path": "win32api/5/EnumFontsProc.html",
    "type": "字体和正文函数",
    "name": "EnumFontsProc",
    "desc": "该函数是一个应用程序定义的回调函数，处理由EnumFonts获得的字体数据"
}]